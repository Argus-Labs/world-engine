syntax = "proto3";

package sidecar.v1;

import "google/protobuf/any.proto";

option go_package = "github.com/argus-labs/argus/sidecar/v1";

service Sidecar {
  rpc Ping(MsgPing) returns (MsgPingResponse);
  rpc MintCoins(MsgMintCoins) returns (MsgMintCoinsResponse);
  rpc SendCoins(MsgSendCoins) returns (MsgSendCoinsResponse);
  rpc EthTx(MsgEthTx) returns (MsgEthTxResponse);
  rpc UpdateGameState(MsgUpdateGameState) returns (MsgUpdateGameStateResponse);
}

message MsgPing {
  string id = 1;
}

message MsgPingResponse {
  string id = 1;
}

message MsgMintCoins {
  int64 amount = 1;
  string denom = 2;
}

message MsgMintCoinsResponse{}

message MsgSendCoins {
  string sender = 1;
  string recipient = 2;
  string denom = 3;
  uint64 amount = 4;
}

message MsgSendCoinsResponse{}

message MsgEthTx {
  // inner transaction data
  google.protobuf.Any data = 1;
  // caches

  // DEPRECATED: encoded storage size of the transaction
  double size = 2 [deprecated=true];
  // transaction hash in hex format
  string hash = 3;
  // ethereum signer address in hex format. This address value is checked
  // against the address derived from the signature (V, R, S) using the
  // secp256k1 elliptic curve
  string from = 4;
}

message MsgEthTxResponse {

  // ethereum transaction hash in hex format. This hash differs from the
  // Tendermint sha256 hash of the transaction bytes. See
  // https://github.com/tendermint/tendermint/issues/6539 for reference
  string hash = 1;
  // logs contains the transaction hash and the proto-compatible ethereum
  // logs.
  repeated Log logs = 2;
  // returned data from evm function (result or data supplied with revert
  // opcode)
  bytes ret = 3;
  // vm error is the error returned by vm execution
  string vm_error = 4;
  // gas consumed by the transaction
  uint64 gas_used = 5;
}

// Log represents an protobuf compatible Ethereum Log that defines a contract
// log event. These events are generated by the LOG opcode and stored/indexed by
// the node.
message Log {
  // Consensus fields:

  // address of the contract that generated the event
  string address = 1;
  // list of topics provided by the contract.
  repeated string topics = 2;
  // supplied by the contract, usually ABI-encoded
  bytes data = 3;

  // Derived fields. These fields are filled in by the node
  // but not secured by consensus.

  // block in which the transaction was included
  uint64 block_number = 4 [json_name = "blockNumber"];
  // hash of the transaction
  string tx_hash = 5 [json_name = "transactionHash"];
  // index of the transaction in the block
  uint64 tx_index = 6 [json_name = "transactionIndex"];
  // hash of the block in which the transaction was included
  string block_hash = 7 [json_name = "blockHash"];
  // index of the log in the block
  uint64 index = 8 [json_name = "logIndex"];

  // The Removed field is true if this log was reverted due to a chain
  // reorganisation. You must pay attention to this field if you receive logs
  // through a filter query.
  bool removed = 9;
}

message MsgUpdateGameState {
  int64 numPlanets = 1;
}

message MsgUpdateGameStateResponse {}
