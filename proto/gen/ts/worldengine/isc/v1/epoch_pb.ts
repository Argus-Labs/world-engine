// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file worldengine/isc/v1/epoch.proto (package worldengine.isc.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Command } from "./command_pb";
import { file_worldengine_isc_v1_command } from "./command_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file worldengine/isc/v1/epoch.proto.
 */
export const file_worldengine_isc_v1_epoch: GenFile = /*@__PURE__*/
  fileDesc("Ch53b3JsZGVuZ2luZS9pc2MvdjEvZXBvY2gucHJvdG8SEndvcmxkZW5naW5lLmlzYy52MSJUCgVFcG9jaBIUCgxlcG9jaF9oZWlnaHQYASABKAQSDAoEaGFzaBgCIAEoDBInCgV0aWNrcxgDIAMoCzIYLndvcmxkZW5naW5lLmlzYy52MS5UaWNrImIKBFRpY2sSLgoGaGVhZGVyGAEgASgLMh4ud29ybGRlbmdpbmUuaXNjLnYxLlRpY2tIZWFkZXISKgoEZGF0YRgCIAEoCzIcLndvcmxkZW5naW5lLmlzYy52MS5UaWNrRGF0YSJYCgpUaWNrSGVhZGVyEhMKC3RpY2tfaGVpZ2h0GAEgASgEEjUKCXRpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCBrpIA8gBASI5CghUaWNrRGF0YRItCghjb21tYW5kcxgBIAMoCzIbLndvcmxkZW5naW5lLmlzYy52MS5Db21tYW5kQmVaSGdpdGh1Yi5jb20vYXJndXMtbGFicy93b3JsZC1lbmdpbmUvcHJvdG8vZ2VuL2dvL3dvcmxkZW5naW5lL2lzYy92MTtpc2N2MaoCGFdvcmxkRW5naW5lLlByb3RvLklzYy5WMWIGcHJvdG8z", [file_buf_validate_validate, file_google_protobuf_timestamp, file_worldengine_isc_v1_command]);

/**
 * Epoch represents a collection of ticks and a hash of the epoch.
 *
 * @generated from message worldengine.isc.v1.Epoch
 */
export type Epoch = Message<"worldengine.isc.v1.Epoch"> & {
  /**
   * The epoch number when this event was emitted.
   *
   * @generated from field: uint64 epoch_height = 1;
   */
  epochHeight: bigint;

  /**
   * TODO: validation for hash once cardinal's state hash is figured out.
   * Hash of the epoch for integrity verification.
   *
   * @generated from field: bytes hash = 2;
   */
  hash: Uint8Array;

  /**
   * All ticks that occurred in this epoch.
   *
   * @generated from field: repeated worldengine.isc.v1.Tick ticks = 3;
   */
  ticks: Tick[];
};

/**
 * Describes the message worldengine.isc.v1.Epoch.
 * Use `create(EpochSchema)` to create a new message.
 */
export const EpochSchema: GenMessage<Epoch> = /*@__PURE__*/
  messageDesc(file_worldengine_isc_v1_epoch, 0);

/**
 * Tick represents a single state change in Cardinal.
 *
 * @generated from message worldengine.isc.v1.Tick
 */
export type Tick = Message<"worldengine.isc.v1.Tick"> & {
  /**
   * @generated from field: worldengine.isc.v1.TickHeader header = 1;
   */
  header?: TickHeader;

  /**
   * @generated from field: worldengine.isc.v1.TickData data = 2;
   */
  data?: TickData;
};

/**
 * Describes the message worldengine.isc.v1.Tick.
 * Use `create(TickSchema)` to create a new message.
 */
export const TickSchema: GenMessage<Tick> = /*@__PURE__*/
  messageDesc(file_worldengine_isc_v1_epoch, 1);

/**
 * @generated from message worldengine.isc.v1.TickHeader
 */
export type TickHeader = Message<"worldengine.isc.v1.TickHeader"> & {
  /**
   * Tick number (monotonically increasing).
   *
   * @generated from field: uint64 tick_height = 1;
   */
  tickHeight: bigint;

  /**
   * Timestamp of the tick.
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;
};

/**
 * Describes the message worldengine.isc.v1.TickHeader.
 * Use `create(TickHeaderSchema)` to create a new message.
 */
export const TickHeaderSchema: GenMessage<TickHeader> = /*@__PURE__*/
  messageDesc(file_worldengine_isc_v1_epoch, 2);

/**
 * @generated from message worldengine.isc.v1.TickData
 */
export type TickData = Message<"worldengine.isc.v1.TickData"> & {
  /**
   * @generated from field: repeated worldengine.isc.v1.Command commands = 1;
   */
  commands: Command[];
};

/**
 * Describes the message worldengine.isc.v1.TickData.
 * Use `create(TickDataSchema)` to create a new message.
 */
export const TickDataSchema: GenMessage<TickData> = /*@__PURE__*/
  messageDesc(file_worldengine_isc_v1_epoch, 3);

