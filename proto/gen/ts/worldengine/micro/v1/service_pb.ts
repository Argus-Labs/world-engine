// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file worldengine/micro/v1/service.proto (package worldengine.micro.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file worldengine/micro/v1/service.proto.
 */
export const file_worldengine_micro_v1_service: GenFile = /*@__PURE__*/
  fileDesc("CiJ3b3JsZGVuZ2luZS9taWNyby92MS9zZXJ2aWNlLnByb3RvEhR3b3JsZGVuZ2luZS5taWNyby52MSLGAgoOU2VydmljZUFkZHJlc3MSJQoGcmVnaW9uGAEgASgJQhW6SBJyEBABMgxeW2EtejAtOS1dKyQSRQoFcmVhbG0YAiABKA4yKi53b3JsZGVuZ2luZS5taWNyby52MS5TZXJ2aWNlQWRkcmVzcy5SZWFsbUIKukgHggEEEAEgABIsCgxvcmdhbml6YXRpb24YAyABKAlCFrpIE3IREAEyDV5bYS16MC05Xy1dKyQSJwoHcHJvamVjdBgEIAEoCUIWukgTchEQATINXlthLXowLTlfLV0rJBIqCgpzZXJ2aWNlX2lkGAUgASgJQha6SBNyERABMg1eW2EtejAtOV8tXSskIkMKBVJlYWxtEhUKEVJFQUxNX1VOU1BFQ0lGSUVEEAASEgoOUkVBTE1fSU5URVJOQUwQARIPCgtSRUFMTV9XT1JMRBACQmtaTGdpdGh1Yi5jb20vYXJndXMtbGFicy93b3JsZC1lbmdpbmUvcHJvdG8vZ2VuL2dvL3dvcmxkZW5naW5lL21pY3JvL3YxO21pY3JvdjGqAhpXb3JsZEVuZ2luZS5Qcm90by5NaWNyby5WMWIGcHJvdG8z", [file_buf_validate_validate]);

/**
 * ServiceAddress is used to identify a unique service instance and corresponds to its NATS subject.
 *
 * The acceptable NATS subject is a subset of the acceptable NATS subject naming convention:
 * Only lowercase alphanumeric characters and hyphens are allowed for all fields.
 * The only exception being <endpoint> which can contain . as a delimiter to leverage NATS routing.
 *
 * The ServiceAddress convention is as follows:
 * <realm>.<organization>.<project>.<service_id>.<endpoint>
 *
 * <realm> is one of the following:
 * - internal: Reserved for internal services
 * - world: Publicly accessible services that is a part of Worldbase network
 *
 * <organization> represents the entity that owns the project (e.g., "argus").
 *
 * <project> is an arbitrary token to related services together (e.g., "platform", "game-rampage").
 *
 * <service_id> is a unique identifier for the service instance. It must be unique within the project.
 *
 * <endpoint> is an arbitrary token that identifies specific functionality within a service.
 * An endpoint can contain . as a delimiter to leverage NATS routing.
 *
 * Examples:
 * - internal.argus.platform.gateway-us-west-2.micro.ping
 * - world.argus.rampage.lobby-1.shard.message.player.connect
 * ┌───────────┬───────────┬───────────┬───────────────────┬────────────────────────────────┐
 * │   realm   │    org    │  project  │    service_id     │            endpoint            │
 * ├───────────┼───────────┼───────────┼───────────────────┼────────────────────────────────┤
 * │ internal  │   argus   │ platform  │ gateway-us-west-2 │           micro.ping           │
 * ├───────────┼───────────┼───────────┼───────────────────┼────────────────────────────────┤
 * │   world   │   argus   │  rampage  │      lobby-1      │  shard.message.player.connect  │
 * └───────────┴───────────┴───────────┴───────────────────┴────────────────────────────────┘
 *
 * @generated from message worldengine.micro.v1.ServiceAddress
 */
export type ServiceAddress = Message<"worldengine.micro.v1.ServiceAddress"> & {
  /**
   * @generated from field: string region = 1;
   */
  region: string;

  /**
   * The realm of the service.
   *
   * @generated from field: worldengine.micro.v1.ServiceAddress.Realm realm = 2;
   */
  realm: ServiceAddress_Realm;

  /**
   * The organization that owns the project (e.g., "argus").
   * Must contain only lowercase alphanumeric characters, hyphens, or underscores.
   *
   * @generated from field: string organization = 3;
   */
  organization: string;

  /**
   * The project name that groups related services (e.g., "platform", "rampage").
   * Must contain only lowercase alphanumeric characters, hyphens, or underscores.
   *
   * @generated from field: string project = 4;
   */
  project: string;

  /**
   * The unique identifier for the service instance within the project.
   * Must be unique within the project and contain only lowercase alphanumeric characters,
   * hyphens, or underscores.
   *
   * @generated from field: string service_id = 5;
   */
  serviceId: string;
};

/**
 * Describes the message worldengine.micro.v1.ServiceAddress.
 * Use `create(ServiceAddressSchema)` to create a new message.
 */
export const ServiceAddressSchema: GenMessage<ServiceAddress> = /*@__PURE__*/
  messageDesc(file_worldengine_micro_v1_service, 0);

/**
 * Realm represents the access scope of the service.
 *
 * @generated from enum worldengine.micro.v1.ServiceAddress.Realm
 */
export enum ServiceAddress_Realm {
  /**
   * Unspecified realm, should not be used.
   *
   * @generated from enum value: REALM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Reserved for internal services
   *
   * @generated from enum value: REALM_INTERNAL = 1;
   */
  INTERNAL = 1,

  /**
   * Publicly accessible services that are part of Worldbase network.
   *
   * @generated from enum value: REALM_WORLD = 2;
   */
  WORLD = 2,
}

/**
 * Describes the enum worldengine.micro.v1.ServiceAddress.Realm.
 */
export const ServiceAddress_RealmSchema: GenEnum<ServiceAddress_Realm> = /*@__PURE__*/
  enumDesc(file_worldengine_micro_v1_service, 0, 0);

