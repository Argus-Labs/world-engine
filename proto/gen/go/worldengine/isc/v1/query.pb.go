// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: worldengine/isc/v1/query.proto

package iscv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Match specifies how component names should be matched against entities.
type Query_Match int32

const (
	// MATCH_UNSPECIFIED is an invalid state and should not be used.
	Query_MATCH_UNSPECIFIED Query_Match = 0
	// MATCH_EXACT requires entities to have exactly the specified components.
	Query_MATCH_EXACT Query_Match = 1
	// MATCH_CONTAINS requires entities to have at least the specified components, but may contain
	// additional components.
	Query_MATCH_CONTAINS Query_Match = 2
)

// Enum value maps for Query_Match.
var (
	Query_Match_name = map[int32]string{
		0: "MATCH_UNSPECIFIED",
		1: "MATCH_EXACT",
		2: "MATCH_CONTAINS",
	}
	Query_Match_value = map[string]int32{
		"MATCH_UNSPECIFIED": 0,
		"MATCH_EXACT":       1,
		"MATCH_CONTAINS":    2,
	}
)

func (x Query_Match) Enum() *Query_Match {
	p := new(Query_Match)
	*p = x
	return p
}

func (x Query_Match) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Query_Match) Descriptor() protoreflect.EnumDescriptor {
	return file_worldengine_isc_v1_query_proto_enumTypes[0].Descriptor()
}

func (Query_Match) Type() protoreflect.EnumType {
	return &file_worldengine_isc_v1_query_proto_enumTypes[0]
}

func (x Query_Match) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Query_Match.Descriptor instead.
func (Query_Match) EnumDescriptor() ([]byte, []int) {
	return file_worldengine_isc_v1_query_proto_rawDescGZIP(), []int{0, 0}
}

// Query represents a request to search for entities in Cardinal.
// This type should correspond to cardinal.Query.
type Query struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of component names to search for.
	Find []string `protobuf:"bytes,1,rep,name=find,proto3" json:"find,omitempty"`
	// match determines how the components should be matched against entities.
	Match Query_Match `protobuf:"varint,2,opt,name=match,proto3,enum=worldengine.isc.v1.Query_Match" json:"match,omitempty"`
	// Optional filter expression using the expr language.
	Where         string `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_worldengine_isc_v1_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_worldengine_isc_v1_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_worldengine_isc_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *Query) GetFind() []string {
	if x != nil {
		return x.Find
	}
	return nil
}

func (x *Query) GetMatch() Query_Match {
	if x != nil {
		return x.Match
	}
	return Query_MATCH_UNSPECIFIED
}

func (x *Query) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

// QueryResult contains results of the query.
type QueryResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of entities that match the query. Each entity is a map of component names to their values
	// as well as a "_ID" field containing the entity ID.
	Entities      []*structpb.Struct `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResult) Reset() {
	*x = QueryResult{}
	mi := &file_worldengine_isc_v1_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult) ProtoMessage() {}

func (x *QueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_worldengine_isc_v1_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult.ProtoReflect.Descriptor instead.
func (*QueryResult) Descriptor() ([]byte, []int) {
	return file_worldengine_isc_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryResult) GetEntities() []*structpb.Struct {
	if x != nil {
		return x.Entities
	}
	return nil
}

var File_worldengine_isc_v1_query_proto protoreflect.FileDescriptor

var file_worldengine_isc_v1_query_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x69, 0x73,
	0x63, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x69, 0x73,
	0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xdc, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x66, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x21, 0xba, 0x48, 0x1e, 0x92, 0x01, 0x1b, 0x22,
	0x19, 0x72, 0x17, 0x10, 0x01, 0x18, 0x80, 0x01, 0x32, 0x10, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41,
	0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f, 0x2d, 0x5d, 0x2b, 0x24, 0x52, 0x04, 0x66, 0x69, 0x6e, 0x64,
	0x12, 0x41, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x69, 0x73,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x42, 0x0a, 0xba, 0x48, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x05, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x22, 0x43, 0x0a, 0x05, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x45, 0x58, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x02, 0x22, 0x42,
	0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x42, 0x65, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x72, 0x67, 0x75, 0x73, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2f, 0x69, 0x73, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x73, 0x63, 0x76, 0x31, 0xaa, 0x02,
	0x18, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x73, 0x63, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_worldengine_isc_v1_query_proto_rawDescOnce sync.Once
	file_worldengine_isc_v1_query_proto_rawDescData []byte
)

func file_worldengine_isc_v1_query_proto_rawDescGZIP() []byte {
	file_worldengine_isc_v1_query_proto_rawDescOnce.Do(func() {
		file_worldengine_isc_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_worldengine_isc_v1_query_proto_rawDesc), len(file_worldengine_isc_v1_query_proto_rawDesc)))
	})
	return file_worldengine_isc_v1_query_proto_rawDescData
}

var file_worldengine_isc_v1_query_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_worldengine_isc_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_worldengine_isc_v1_query_proto_goTypes = []any{
	(Query_Match)(0),        // 0: worldengine.isc.v1.Query.Match
	(*Query)(nil),           // 1: worldengine.isc.v1.Query
	(*QueryResult)(nil),     // 2: worldengine.isc.v1.QueryResult
	(*structpb.Struct)(nil), // 3: google.protobuf.Struct
}
var file_worldengine_isc_v1_query_proto_depIdxs = []int32{
	0, // 0: worldengine.isc.v1.Query.match:type_name -> worldengine.isc.v1.Query.Match
	3, // 1: worldengine.isc.v1.QueryResult.entities:type_name -> google.protobuf.Struct
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_worldengine_isc_v1_query_proto_init() }
func file_worldengine_isc_v1_query_proto_init() {
	if File_worldengine_isc_v1_query_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_worldengine_isc_v1_query_proto_rawDesc), len(file_worldengine_isc_v1_query_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_worldengine_isc_v1_query_proto_goTypes,
		DependencyIndexes: file_worldengine_isc_v1_query_proto_depIdxs,
		EnumInfos:         file_worldengine_isc_v1_query_proto_enumTypes,
		MessageInfos:      file_worldengine_isc_v1_query_proto_msgTypes,
	}.Build()
	File_worldengine_isc_v1_query_proto = out.File
	file_worldengine_isc_v1_query_proto_goTypes = nil
	file_worldengine_isc_v1_query_proto_depIdxs = nil
}
