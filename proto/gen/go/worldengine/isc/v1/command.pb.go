// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: worldengine/isc/v1/command.proto

package iscv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/argus-labs/world-engine/proto/gen/go/worldengine/micro/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthInfo_AuthMode int32

const (
	AuthInfo_AUTH_MODE_UNSPECIFIED AuthInfo_AuthMode = 0
	AuthInfo_AUTH_MODE_DIRECT      AuthInfo_AuthMode = 1
	AuthInfo_AUTH_MODE_PERSONA     AuthInfo_AuthMode = 2
)

// Enum value maps for AuthInfo_AuthMode.
var (
	AuthInfo_AuthMode_name = map[int32]string{
		0: "AUTH_MODE_UNSPECIFIED",
		1: "AUTH_MODE_DIRECT",
		2: "AUTH_MODE_PERSONA",
	}
	AuthInfo_AuthMode_value = map[string]int32{
		"AUTH_MODE_UNSPECIFIED": 0,
		"AUTH_MODE_DIRECT":      1,
		"AUTH_MODE_PERSONA":     2,
	}
)

func (x AuthInfo_AuthMode) Enum() *AuthInfo_AuthMode {
	p := new(AuthInfo_AuthMode)
	*p = x
	return p
}

func (x AuthInfo_AuthMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthInfo_AuthMode) Descriptor() protoreflect.EnumDescriptor {
	return file_worldengine_isc_v1_command_proto_enumTypes[0].Descriptor()
}

func (AuthInfo_AuthMode) Type() protoreflect.EnumType {
	return &file_worldengine_isc_v1_command_proto_enumTypes[0]
}

func (x AuthInfo_AuthMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthInfo_AuthMode.Descriptor instead.
func (AuthInfo_AuthMode) EnumDescriptor() ([]byte, []int) {
	return file_worldengine_isc_v1_command_proto_rawDescGZIP(), []int{3, 0}
}

// SignedCommand is a wrapper around command data that carries a signature of the command payload.
type Command struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The signature of the command.
	Signature []byte    `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	AuthInfo  *AuthInfo `protobuf:"bytes,2,opt,name=auth_info,json=authInfo,proto3" json:"auth_info,omitempty"`
	// The command data itself.
	CommandBytes  []byte `protobuf:"bytes,3,opt,name=command_bytes,json=commandBytes,proto3" json:"command_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_worldengine_isc_v1_command_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_worldengine_isc_v1_command_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_worldengine_isc_v1_command_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Command) GetAuthInfo() *AuthInfo {
	if x != nil {
		return x.AuthInfo
	}
	return nil
}

func (x *Command) GetCommandBytes() []byte {
	if x != nil {
		return x.CommandBytes
	}
	return nil
}

// Command represents the data payload of a command to trigger systems in a shard.
type CommandRaw struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The timestamp when the command was created for replay protection.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Salt for additional uniqueness between commands.
	Salt          []byte       `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
	Body          *CommandBody `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandRaw) Reset() {
	*x = CommandRaw{}
	mi := &file_worldengine_isc_v1_command_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRaw) ProtoMessage() {}

func (x *CommandRaw) ProtoReflect() protoreflect.Message {
	mi := &file_worldengine_isc_v1_command_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRaw.ProtoReflect.Descriptor instead.
func (*CommandRaw) Descriptor() ([]byte, []int) {
	return file_worldengine_isc_v1_command_proto_rawDescGZIP(), []int{1}
}

func (x *CommandRaw) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CommandRaw) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *CommandRaw) GetBody() *CommandBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type CommandBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The address of the cardinal shard to send the command to.
	Address       *v1.ServiceAddress `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Persona       *Persona           `protobuf:"bytes,3,opt,name=persona,proto3" json:"persona,omitempty"`
	Payload       *structpb.Struct   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandBody) Reset() {
	*x = CommandBody{}
	mi := &file_worldengine_isc_v1_command_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandBody) ProtoMessage() {}

func (x *CommandBody) ProtoReflect() protoreflect.Message {
	mi := &file_worldengine_isc_v1_command_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandBody.ProtoReflect.Descriptor instead.
func (*CommandBody) Descriptor() ([]byte, []int) {
	return file_worldengine_isc_v1_command_proto_rawDescGZIP(), []int{2}
}

func (x *CommandBody) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandBody) GetAddress() *v1.ServiceAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CommandBody) GetPersona() *Persona {
	if x != nil {
		return x.Persona
	}
	return nil
}

func (x *CommandBody) GetPayload() *structpb.Struct {
	if x != nil {
		return x.Payload
	}
	return nil
}

type AuthInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Mode  AuthInfo_AuthMode      `protobuf:"varint,1,opt,name=mode,proto3,enum=worldengine.isc.v1.AuthInfo_AuthMode" json:"mode,omitempty"`
	// The address of the signer. Right now this is just the public key.
	SignerAddress []byte `protobuf:"bytes,2,opt,name=signer_address,json=signerAddress,proto3" json:"signer_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthInfo) Reset() {
	*x = AuthInfo{}
	mi := &file_worldengine_isc_v1_command_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthInfo) ProtoMessage() {}

func (x *AuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_worldengine_isc_v1_command_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthInfo.ProtoReflect.Descriptor instead.
func (*AuthInfo) Descriptor() ([]byte, []int) {
	return file_worldengine_isc_v1_command_proto_rawDescGZIP(), []int{3}
}

func (x *AuthInfo) GetMode() AuthInfo_AuthMode {
	if x != nil {
		return x.Mode
	}
	return AuthInfo_AUTH_MODE_UNSPECIFIED
}

func (x *AuthInfo) GetSignerAddress() []byte {
	if x != nil {
		return x.SignerAddress
	}
	return nil
}

var File_worldengine_isc_v1_command_proto protoreflect.FileDescriptor

var file_worldengine_isc_v1_command_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x69, 0x73,
	0x63, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x69, 0x73, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f,
	0x69, 0x73, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x7a,
	0x02, 0x68, 0x40, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x41,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x69, 0x73, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2b, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xa3,
	0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x12, 0x40, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1e, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0a, 0xba,
	0x48, 0x07, 0xc8, 0x01, 0x01, 0x7a, 0x02, 0x68, 0x10, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12,
	0x33, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x69, 0x73, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x84, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1f, 0xba, 0x48, 0x1c, 0xc8, 0x01, 0x01, 0x72, 0x17, 0x10, 0x01, 0x18, 0x80,
	0x01, 0x32, 0x10, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f, 0x2d,
	0x5d, 0x2b, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x69, 0x73, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x12, 0x39, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x69, 0x73, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0xba,
	0x48, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x31, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x7a,
	0x02, 0x68, 0x20, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x52, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x55, 0x54,
	0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x45, 0x52,
	0x53, 0x4f, 0x4e, 0x41, 0x10, 0x02, 0x42, 0x65, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x67, 0x75, 0x73, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x69, 0x73, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x73, 0x63,
	0x76, 0x31, 0xaa, 0x02, 0x18, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x73, 0x63, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_worldengine_isc_v1_command_proto_rawDescOnce sync.Once
	file_worldengine_isc_v1_command_proto_rawDescData []byte
)

func file_worldengine_isc_v1_command_proto_rawDescGZIP() []byte {
	file_worldengine_isc_v1_command_proto_rawDescOnce.Do(func() {
		file_worldengine_isc_v1_command_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_worldengine_isc_v1_command_proto_rawDesc), len(file_worldengine_isc_v1_command_proto_rawDesc)))
	})
	return file_worldengine_isc_v1_command_proto_rawDescData
}

var file_worldengine_isc_v1_command_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_worldengine_isc_v1_command_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_worldengine_isc_v1_command_proto_goTypes = []any{
	(AuthInfo_AuthMode)(0),        // 0: worldengine.isc.v1.AuthInfo.AuthMode
	(*Command)(nil),               // 1: worldengine.isc.v1.Command
	(*CommandRaw)(nil),            // 2: worldengine.isc.v1.CommandRaw
	(*CommandBody)(nil),           // 3: worldengine.isc.v1.CommandBody
	(*AuthInfo)(nil),              // 4: worldengine.isc.v1.AuthInfo
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*v1.ServiceAddress)(nil),     // 6: worldengine.micro.v1.ServiceAddress
	(*Persona)(nil),               // 7: worldengine.isc.v1.Persona
	(*structpb.Struct)(nil),       // 8: google.protobuf.Struct
}
var file_worldengine_isc_v1_command_proto_depIdxs = []int32{
	4, // 0: worldengine.isc.v1.Command.auth_info:type_name -> worldengine.isc.v1.AuthInfo
	5, // 1: worldengine.isc.v1.CommandRaw.timestamp:type_name -> google.protobuf.Timestamp
	3, // 2: worldengine.isc.v1.CommandRaw.body:type_name -> worldengine.isc.v1.CommandBody
	6, // 3: worldengine.isc.v1.CommandBody.address:type_name -> worldengine.micro.v1.ServiceAddress
	7, // 4: worldengine.isc.v1.CommandBody.persona:type_name -> worldengine.isc.v1.Persona
	8, // 5: worldengine.isc.v1.CommandBody.payload:type_name -> google.protobuf.Struct
	0, // 6: worldengine.isc.v1.AuthInfo.mode:type_name -> worldengine.isc.v1.AuthInfo.AuthMode
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_worldengine_isc_v1_command_proto_init() }
func file_worldengine_isc_v1_command_proto_init() {
	if File_worldengine_isc_v1_command_proto != nil {
		return
	}
	file_worldengine_isc_v1_persona_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_worldengine_isc_v1_command_proto_rawDesc), len(file_worldengine_isc_v1_command_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_worldengine_isc_v1_command_proto_goTypes,
		DependencyIndexes: file_worldengine_isc_v1_command_proto_depIdxs,
		EnumInfos:         file_worldengine_isc_v1_command_proto_enumTypes,
		MessageInfos:      file_worldengine_isc_v1_command_proto_msgTypes,
	}.Build()
	File_worldengine_isc_v1_command_proto = out.File
	file_worldengine_isc_v1_command_proto_goTypes = nil
	file_worldengine_isc_v1_command_proto_depIdxs = nil
}
