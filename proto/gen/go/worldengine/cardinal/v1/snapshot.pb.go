// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: worldengine/cardinal/v1/snapshot.proto

package cardinalv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CardinalSnapshot represents a complete snapshot of the world state.
type CardinalSnapshot struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity manager state
	NextId  uint32   `protobuf:"varint,1,opt,name=next_id,json=nextId,proto3" json:"next_id,omitempty"`
	FreeIds []uint32 `protobuf:"varint,2,rep,packed,name=free_ids,json=freeIds,proto3" json:"free_ids,omitempty"`
	// Entity to archetype mapping as sparse set
	EntityArch []int64 `protobuf:"varint,3,rep,packed,name=entity_arch,json=entityArch,proto3" json:"entity_arch,omitempty"`
	// Archetypes in the world state
	Archetypes    []*Archetype `protobuf:"bytes,4,rep,name=archetypes,proto3" json:"archetypes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CardinalSnapshot) Reset() {
	*x = CardinalSnapshot{}
	mi := &file_worldengine_cardinal_v1_snapshot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardinalSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardinalSnapshot) ProtoMessage() {}

func (x *CardinalSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_worldengine_cardinal_v1_snapshot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardinalSnapshot.ProtoReflect.Descriptor instead.
func (*CardinalSnapshot) Descriptor() ([]byte, []int) {
	return file_worldengine_cardinal_v1_snapshot_proto_rawDescGZIP(), []int{0}
}

func (x *CardinalSnapshot) GetNextId() uint32 {
	if x != nil {
		return x.NextId
	}
	return 0
}

func (x *CardinalSnapshot) GetFreeIds() []uint32 {
	if x != nil {
		return x.FreeIds
	}
	return nil
}

func (x *CardinalSnapshot) GetEntityArch() []int64 {
	if x != nil {
		return x.EntityArch
	}
	return nil
}

func (x *CardinalSnapshot) GetArchetypes() []*Archetype {
	if x != nil {
		return x.Archetypes
	}
	return nil
}

// Archetype represents a collection of entities with the same component types.
type Archetype struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this archetype (corresponds to index in archetypes array)
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Bitmap representing component types in this archetype
	ComponentsBitmap []byte `protobuf:"bytes,2,opt,name=components_bitmap,json=componentsBitmap,proto3" json:"components_bitmap,omitempty"`
	// Entity to row mapping as sparse set
	Rows []int64 `protobuf:"varint,3,rep,packed,name=rows,proto3" json:"rows,omitempty"`
	// List of entity IDs in this archetype
	Entities []uint32 `protobuf:"varint,4,rep,packed,name=entities,proto3" json:"entities,omitempty"`
	// Columns containing component data
	Columns       []*Column `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Archetype) Reset() {
	*x = Archetype{}
	mi := &file_worldengine_cardinal_v1_snapshot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Archetype) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Archetype) ProtoMessage() {}

func (x *Archetype) ProtoReflect() protoreflect.Message {
	mi := &file_worldengine_cardinal_v1_snapshot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Archetype.ProtoReflect.Descriptor instead.
func (*Archetype) Descriptor() ([]byte, []int) {
	return file_worldengine_cardinal_v1_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *Archetype) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Archetype) GetComponentsBitmap() []byte {
	if x != nil {
		return x.ComponentsBitmap
	}
	return nil
}

func (x *Archetype) GetRows() []int64 {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *Archetype) GetEntities() []uint32 {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *Archetype) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

// Column represents a sparse set data structure for storing component data.
type Column struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the component stored in this column
	ComponentName string `protobuf:"bytes,1,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	// Dense array of serialized component data (JSON)
	Components    [][]byte `protobuf:"bytes,2,rep,name=components,proto3" json:"components,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column) Reset() {
	*x = Column{}
	mi := &file_worldengine_cardinal_v1_snapshot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_worldengine_cardinal_v1_snapshot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_worldengine_cardinal_v1_snapshot_proto_rawDescGZIP(), []int{2}
}

func (x *Column) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *Column) GetComponents() [][]byte {
	if x != nil {
		return x.Components
	}
	return nil
}

var File_worldengine_cardinal_v1_snapshot_proto protoreflect.FileDescriptor

var file_worldengine_cardinal_v1_snapshot_proto_rawDesc = string([]byte{
	0x0a, 0x26, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x63, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab,
	0x01, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07,
	0x66, 0x72, 0x65, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x41, 0x72, 0x63, 0x68, 0x12, 0x42, 0x0a, 0x0a, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xb3, 0x01, 0x0a,
	0x09, 0x41, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x22, 0x58, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2e, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x74, 0x5a, 0x52,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x67, 0x75, 0x73,
	0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2d, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x63, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c,
	0x76, 0x31, 0xaa, 0x02, 0x1d, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x2e,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_worldengine_cardinal_v1_snapshot_proto_rawDescOnce sync.Once
	file_worldengine_cardinal_v1_snapshot_proto_rawDescData []byte
)

func file_worldengine_cardinal_v1_snapshot_proto_rawDescGZIP() []byte {
	file_worldengine_cardinal_v1_snapshot_proto_rawDescOnce.Do(func() {
		file_worldengine_cardinal_v1_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_worldengine_cardinal_v1_snapshot_proto_rawDesc), len(file_worldengine_cardinal_v1_snapshot_proto_rawDesc)))
	})
	return file_worldengine_cardinal_v1_snapshot_proto_rawDescData
}

var file_worldengine_cardinal_v1_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_worldengine_cardinal_v1_snapshot_proto_goTypes = []any{
	(*CardinalSnapshot)(nil), // 0: worldengine.cardinal.v1.CardinalSnapshot
	(*Archetype)(nil),        // 1: worldengine.cardinal.v1.Archetype
	(*Column)(nil),           // 2: worldengine.cardinal.v1.Column
}
var file_worldengine_cardinal_v1_snapshot_proto_depIdxs = []int32{
	1, // 0: worldengine.cardinal.v1.CardinalSnapshot.archetypes:type_name -> worldengine.cardinal.v1.Archetype
	2, // 1: worldengine.cardinal.v1.Archetype.columns:type_name -> worldengine.cardinal.v1.Column
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_worldengine_cardinal_v1_snapshot_proto_init() }
func file_worldengine_cardinal_v1_snapshot_proto_init() {
	if File_worldengine_cardinal_v1_snapshot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_worldengine_cardinal_v1_snapshot_proto_rawDesc), len(file_worldengine_cardinal_v1_snapshot_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_worldengine_cardinal_v1_snapshot_proto_goTypes,
		DependencyIndexes: file_worldengine_cardinal_v1_snapshot_proto_depIdxs,
		MessageInfos:      file_worldengine_cardinal_v1_snapshot_proto_msgTypes,
	}.Build()
	File_worldengine_cardinal_v1_snapshot_proto = out.File
	file_worldengine_cardinal_v1_snapshot_proto_goTypes = nil
	file_worldengine_cardinal_v1_snapshot_proto_depIdxs = nil
}
