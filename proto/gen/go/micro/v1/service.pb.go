// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: micro/v1/service.proto

package microv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Realm represents the access scope of the service.
type ServiceAddress_Realm int32

const (
	// Unspecified realm, should not be used.
	ServiceAddress_REALM_UNSPECIFIED ServiceAddress_Realm = 0
	// Reserved for internal services
	ServiceAddress_REALM_INTERNAL ServiceAddress_Realm = 1
	// Publicly accessible services that are part of Worldbase network.
	ServiceAddress_REALM_WORLD ServiceAddress_Realm = 2
)

// Enum value maps for ServiceAddress_Realm.
var (
	ServiceAddress_Realm_name = map[int32]string{
		0: "REALM_UNSPECIFIED",
		1: "REALM_INTERNAL",
		2: "REALM_WORLD",
	}
	ServiceAddress_Realm_value = map[string]int32{
		"REALM_UNSPECIFIED": 0,
		"REALM_INTERNAL":    1,
		"REALM_WORLD":       2,
	}
)

func (x ServiceAddress_Realm) Enum() *ServiceAddress_Realm {
	p := new(ServiceAddress_Realm)
	*p = x
	return p
}

func (x ServiceAddress_Realm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceAddress_Realm) Descriptor() protoreflect.EnumDescriptor {
	return file_micro_v1_service_proto_enumTypes[0].Descriptor()
}

func (ServiceAddress_Realm) Type() protoreflect.EnumType {
	return &file_micro_v1_service_proto_enumTypes[0]
}

func (x ServiceAddress_Realm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceAddress_Realm.Descriptor instead.
func (ServiceAddress_Realm) EnumDescriptor() ([]byte, []int) {
	return file_micro_v1_service_proto_rawDescGZIP(), []int{0, 0}
}

// ServiceAddress is used to identify a unique service instance and corresponds to its NATS subject.
//
// The acceptable NATS subject is a subset of the acceptable NATS subject naming convention:
// Only lowercase alphanumeric characters and hyphens are allowed for all fields.
// The only exception being <endpoint> which can contain . as a delimiter to leverage NATS routing.
//
// The ServiceAddress convention is as follows:
// <realm>.<organization>.<project>.<service_id>.<endpoint>
//
// <realm> is one of the following:
// - internal: Reserved for internal services
// - world: Publicly accessible services that is a part of Worldbase network
//
// <organization> represents the entity that owns the project (e.g., "argus").
//
// <project> is an arbitrary token to related services together (e.g., "platform", "game-rampage").
//
// <service_id> is a unique identifier for the service instance. It must be unique within the project.
//
// <endpoint> is an arbitrary token that identifies specific functionality within a service.
// An endpoint can contain . as a delimiter to leverage NATS routing.
//
// Examples:
// - internal.argus.platform.gateway-us-west-2.micro.ping
// - world.argus.rampage.lobby-1.shard.message.player.connect
// ┌───────────┬───────────┬───────────┬───────────────────┬────────────────────────────────┐
// │   realm   │    org    │  project  │    service_id     │            endpoint            │
// ├───────────┼───────────┼───────────┼───────────────────┼────────────────────────────────┤
// │ internal  │   argus   │ platform  │ gateway-us-west-2 │           micro.ping           │
// ├───────────┼───────────┼───────────┼───────────────────┼────────────────────────────────┤
// │   world   │   argus   │  rampage  │      lobby-1      │  shard.message.player.connect  │
// └───────────┴───────────┴───────────┴───────────────────┴────────────────────────────────┘
type ServiceAddress struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Region string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// The realm of the service.
	Realm ServiceAddress_Realm `protobuf:"varint,2,opt,name=realm,proto3,enum=micro.v1.ServiceAddress_Realm" json:"realm,omitempty"`
	// The organization that owns the project (e.g., "argus").
	// Must contain only lowercase alphanumeric characters, hyphens, or underscores.
	Organization string `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization,omitempty"`
	// The project name that groups related services (e.g., "platform", "rampage").
	// Must contain only lowercase alphanumeric characters, hyphens, or underscores.
	Project string `protobuf:"bytes,4,opt,name=project,proto3" json:"project,omitempty"`
	// The unique identifier for the service instance within the project.
	// Must be unique within the project and contain only lowercase alphanumeric characters,
	// hyphens, or underscores.
	ServiceId     string `protobuf:"bytes,5,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceAddress) Reset() {
	*x = ServiceAddress{}
	mi := &file_micro_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAddress) ProtoMessage() {}

func (x *ServiceAddress) ProtoReflect() protoreflect.Message {
	mi := &file_micro_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAddress.ProtoReflect.Descriptor instead.
func (*ServiceAddress) Descriptor() ([]byte, []int) {
	return file_micro_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceAddress) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ServiceAddress) GetRealm() ServiceAddress_Realm {
	if x != nil {
		return x.Realm
	}
	return ServiceAddress_REALM_UNSPECIFIED
}

func (x *ServiceAddress) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *ServiceAddress) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ServiceAddress) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

var File_micro_v1_service_proto protoreflect.FileDescriptor

var file_micro_v1_service_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xeb, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x15, 0xba, 0x48, 0x12, 0x72, 0x10, 0x10, 0x01, 0x32, 0x0c, 0x5e, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x2b, 0x24, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x6d,
	0x42, 0x0a, 0xba, 0x48, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x05, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x12, 0x3a, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xba, 0x48, 0x13, 0x72, 0x11,
	0x10, 0x01, 0x32, 0x0d, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5f, 0x2d, 0x5d, 0x2b,
	0x24, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x16, 0xba, 0x48, 0x13, 0x72, 0x11, 0x10, 0x01, 0x32, 0x0d, 0x5e, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5f, 0x2d, 0x5d, 0x2b, 0x24, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x35, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xba, 0x48, 0x13, 0x72, 0x11, 0x10, 0x01, 0x32, 0x0d,
	0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5f, 0x2d, 0x5d, 0x2b, 0x24, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x6c,
	0x6d, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x41, 0x4c, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x41, 0x4c,
	0x4d, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x52, 0x45, 0x41, 0x4c, 0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x10, 0x02, 0x42, 0x5f, 0x5a,
	0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x67, 0x75,
	0x73, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2d, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x76,
	0x31, 0xaa, 0x02, 0x1a, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_micro_v1_service_proto_rawDescOnce sync.Once
	file_micro_v1_service_proto_rawDescData []byte
)

func file_micro_v1_service_proto_rawDescGZIP() []byte {
	file_micro_v1_service_proto_rawDescOnce.Do(func() {
		file_micro_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_micro_v1_service_proto_rawDesc), len(file_micro_v1_service_proto_rawDesc)))
	})
	return file_micro_v1_service_proto_rawDescData
}

var file_micro_v1_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_micro_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_micro_v1_service_proto_goTypes = []any{
	(ServiceAddress_Realm)(0), // 0: micro.v1.ServiceAddress.Realm
	(*ServiceAddress)(nil),    // 1: micro.v1.ServiceAddress
}
var file_micro_v1_service_proto_depIdxs = []int32{
	0, // 0: micro.v1.ServiceAddress.realm:type_name -> micro.v1.ServiceAddress.Realm
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_micro_v1_service_proto_init() }
func file_micro_v1_service_proto_init() {
	if File_micro_v1_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_micro_v1_service_proto_rawDesc), len(file_micro_v1_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_micro_v1_service_proto_goTypes,
		DependencyIndexes: file_micro_v1_service_proto_depIdxs,
		EnumInfos:         file_micro_v1_service_proto_enumTypes,
		MessageInfos:      file_micro_v1_service_proto_msgTypes,
	}.Build()
	File_micro_v1_service_proto = out.File
	file_micro_v1_service_proto_goTypes = nil
	file_micro_v1_service_proto_depIdxs = nil
}
