// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: registry/v1/query.proto

package registryv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/argus-labs/world-engine/proto/gen/go/isc/v1"
	_go "github.com/cosmos/ics23/go"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryPersonaRequest contains the request data for querying persona details.
type QueryPersonaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The persona to query for
	Persona *v1.Persona `protobuf:"bytes,1,opt,name=persona,proto3" json:"persona,omitempty"`
	// Timestamp of the query request
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPersonaRequest) Reset() {
	*x = QueryPersonaRequest{}
	mi := &file_registry_v1_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPersonaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPersonaRequest) ProtoMessage() {}

func (x *QueryPersonaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPersonaRequest.ProtoReflect.Descriptor instead.
func (*QueryPersonaRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryPersonaRequest) GetPersona() *v1.Persona {
	if x != nil {
		return x.Persona
	}
	return nil
}

func (x *QueryPersonaRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// QueryPersonaResponse contains the response data for a persona query.
type QueryPersonaResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Details about the persona
	Details *PersonaDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	// When this response expires
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// The registry version for this specific response.
	Version int64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// Merkle proof of this persona's existence.
	Proof *_go.CommitmentProof `protobuf:"bytes,4,opt,name=proof,proto3" json:"proof,omitempty"`
	// The merkle root hash for proof verification.
	Root          []byte `protobuf:"bytes,5,opt,name=root,proto3" json:"root,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPersonaResponse) Reset() {
	*x = QueryPersonaResponse{}
	mi := &file_registry_v1_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPersonaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPersonaResponse) ProtoMessage() {}

func (x *QueryPersonaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPersonaResponse.ProtoReflect.Descriptor instead.
func (*QueryPersonaResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryPersonaResponse) GetDetails() *PersonaDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *QueryPersonaResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *QueryPersonaResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *QueryPersonaResponse) GetProof() *_go.CommitmentProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *QueryPersonaResponse) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

// PersonaDetails contains the details about a registered persona.
type PersonaDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Authorized signer addresses for this persona
	Signers       [][]byte `protobuf:"bytes,1,rep,name=signers,proto3" json:"signers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PersonaDetails) Reset() {
	*x = PersonaDetails{}
	mi := &file_registry_v1_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PersonaDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonaDetails) ProtoMessage() {}

func (x *PersonaDetails) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonaDetails.ProtoReflect.Descriptor instead.
func (*PersonaDetails) Descriptor() ([]byte, []int) {
	return file_registry_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *PersonaDetails) GetSigners() [][]byte {
	if x != nil {
		return x.Signers
	}
	return nil
}

var File_registry_v1_query_proto protoreflect.FileDescriptor

var file_registry_v1_query_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x69, 0x63, 0x73, 0x32,
	0x33, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x69, 0x73, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x73, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x12, 0x40, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x92, 0x02, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x41, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x69, 0x63, 0x73, 0x32, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01,
	0x7a, 0x02, 0x10, 0x01, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x38, 0x0a, 0x0e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x07,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x42, 0x0c, 0xba,
	0x48, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x7a, 0x02, 0x68, 0x20, 0x52, 0x07, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x73, 0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x67, 0x75, 0x73, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_registry_v1_query_proto_rawDescOnce sync.Once
	file_registry_v1_query_proto_rawDescData []byte
)

func file_registry_v1_query_proto_rawDescGZIP() []byte {
	file_registry_v1_query_proto_rawDescOnce.Do(func() {
		file_registry_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_registry_v1_query_proto_rawDesc), len(file_registry_v1_query_proto_rawDesc)))
	})
	return file_registry_v1_query_proto_rawDescData
}

var file_registry_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_registry_v1_query_proto_goTypes = []any{
	(*QueryPersonaRequest)(nil),   // 0: registry.v1.QueryPersonaRequest
	(*QueryPersonaResponse)(nil),  // 1: registry.v1.QueryPersonaResponse
	(*PersonaDetails)(nil),        // 2: registry.v1.PersonaDetails
	(*v1.Persona)(nil),            // 3: isc.v1.Persona
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*_go.CommitmentProof)(nil),   // 5: cosmos.ics23.v1.CommitmentProof
}
var file_registry_v1_query_proto_depIdxs = []int32{
	3, // 0: registry.v1.QueryPersonaRequest.persona:type_name -> isc.v1.Persona
	4, // 1: registry.v1.QueryPersonaRequest.timestamp:type_name -> google.protobuf.Timestamp
	2, // 2: registry.v1.QueryPersonaResponse.details:type_name -> registry.v1.PersonaDetails
	4, // 3: registry.v1.QueryPersonaResponse.expires_at:type_name -> google.protobuf.Timestamp
	5, // 4: registry.v1.QueryPersonaResponse.proof:type_name -> cosmos.ics23.v1.CommitmentProof
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_registry_v1_query_proto_init() }
func file_registry_v1_query_proto_init() {
	if File_registry_v1_query_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_registry_v1_query_proto_rawDesc), len(file_registry_v1_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_registry_v1_query_proto_goTypes,
		DependencyIndexes: file_registry_v1_query_proto_depIdxs,
		MessageInfos:      file_registry_v1_query_proto_msgTypes,
	}.Build()
	File_registry_v1_query_proto = out.File
	file_registry_v1_query_proto_goTypes = nil
	file_registry_v1_query_proto_depIdxs = nil
}
