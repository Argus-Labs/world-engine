// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: micro/v1/service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WorldEngine.Proto.Micro.V1 {

  /// <summary>Holder for reflection information generated from micro/v1/service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for micro/v1/service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZtaWNyby92MS9zZXJ2aWNlLnByb3RvEghtaWNyby52MRobYnVmL3ZhbGlk",
            "YXRlL3ZhbGlkYXRlLnByb3RvIusCCg5TZXJ2aWNlQWRkcmVzcxItCgZyZWdp",
            "b24YASABKAlCFbpIEnIQEAEyDF5bYS16MC05LV0rJFIGcmVnaW9uEkAKBXJl",
            "YWxtGAIgASgOMh4ubWljcm8udjEuU2VydmljZUFkZHJlc3MuUmVhbG1CCrpI",
            "B4IBBBABIABSBXJlYWxtEjoKDG9yZ2FuaXphdGlvbhgDIAEoCUIWukgTchEQ",
            "ATINXlthLXowLTlfLV0rJFIMb3JnYW5pemF0aW9uEjAKB3Byb2plY3QYBCAB",
            "KAlCFrpIE3IREAEyDV5bYS16MC05Xy1dKyRSB3Byb2plY3QSNQoKc2Vydmlj",
            "ZV9pZBgFIAEoCUIWukgTchEQATINXlthLXowLTlfLV0rJFIJc2VydmljZUlk",
            "IkMKBVJlYWxtEhUKEVJFQUxNX1VOU1BFQ0lGSUVEEAASEgoOUkVBTE1fSU5U",
            "RVJOQUwQARIPCgtSRUFMTV9XT1JMRBACQl9aQGdpdGh1Yi5jb20vYXJndXMt",
            "bGFicy93b3JsZC1lbmdpbmUvcHJvdG8vZ2VuL2dvL21pY3JvL3YxO21pY3Jv",
            "djGqAhpXb3JsZEVuZ2luZS5Qcm90by5NaWNyby5WMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Buf.Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WorldEngine.Proto.Micro.V1.ServiceAddress), global::WorldEngine.Proto.Micro.V1.ServiceAddress.Parser, new[]{ "Region", "Realm", "Organization", "Project", "ServiceId" }, null, new[]{ typeof(global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// ServiceAddress is used to identify a unique service instance and corresponds to its NATS subject.
  ///
  /// The acceptable NATS subject is a subset of the acceptable NATS subject naming convention:
  /// Only lowercase alphanumeric characters and hyphens are allowed for all fields.
  /// The only exception being &lt;endpoint> which can contain . as a delimiter to leverage NATS routing.
  ///
  /// The ServiceAddress convention is as follows:
  /// &lt;realm>.&lt;organization>.&lt;project>.&lt;service_id>.&lt;endpoint>
  ///
  /// &lt;realm> is one of the following:
  /// - internal: Reserved for internal services
  /// - world: Publicly accessible services that is a part of Worldbase network
  ///
  /// &lt;organization> represents the entity that owns the project (e.g., "argus").
  ///
  /// &lt;project> is an arbitrary token to related services together (e.g., "platform", "game-rampage").
  ///
  /// &lt;service_id> is a unique identifier for the service instance. It must be unique within the project.
  ///
  /// &lt;endpoint> is an arbitrary token that identifies specific functionality within a service.
  /// An endpoint can contain . as a delimiter to leverage NATS routing.
  ///
  /// Examples:
  /// - internal.argus.platform.gateway-us-west-2.micro.ping
  /// - world.argus.rampage.lobby-1.shard.message.player.connect
  /// ┌───────────┬───────────┬───────────┬───────────────────┬────────────────────────────────┐
  /// │   realm   │    org    │  project  │    service_id     │            endpoint            │
  /// ├───────────┼───────────┼───────────┼───────────────────┼────────────────────────────────┤
  /// │ internal  │   argus   │ platform  │ gateway-us-west-2 │           micro.ping           │
  /// ├───────────┼───────────┼───────────┼───────────────────┼────────────────────────────────┤
  /// │   world   │   argus   │  rampage  │      lobby-1      │  shard.message.player.connect  │
  /// └───────────┴───────────┴───────────┴───────────────────┴────────────────────────────────┘
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ServiceAddress : pb::IMessage<ServiceAddress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServiceAddress> _parser = new pb::MessageParser<ServiceAddress>(() => new ServiceAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServiceAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WorldEngine.Proto.Micro.V1.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceAddress(ServiceAddress other) : this() {
      region_ = other.region_;
      realm_ = other.realm_;
      organization_ = other.organization_;
      project_ = other.project_;
      serviceId_ = other.serviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceAddress Clone() {
      return new ServiceAddress(this);
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 1;
    private string region_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "realm" field.</summary>
    public const int RealmFieldNumber = 2;
    private global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm realm_ = global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm.Unspecified;
    /// <summary>
    /// The realm of the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm Realm {
      get { return realm_; }
      set {
        realm_ = value;
      }
    }

    /// <summary>Field number for the "organization" field.</summary>
    public const int OrganizationFieldNumber = 3;
    private string organization_ = "";
    /// <summary>
    /// The organization that owns the project (e.g., "argus").
    /// Must contain only lowercase alphanumeric characters, hyphens, or underscores.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Organization {
      get { return organization_; }
      set {
        organization_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 4;
    private string project_ = "";
    /// <summary>
    /// The project name that groups related services (e.g., "platform", "rampage").
    /// Must contain only lowercase alphanumeric characters, hyphens, or underscores.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_id" field.</summary>
    public const int ServiceIdFieldNumber = 5;
    private string serviceId_ = "";
    /// <summary>
    /// The unique identifier for the service instance within the project.
    /// Must be unique within the project and contain only lowercase alphanumeric characters,
    /// hyphens, or underscores.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServiceAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServiceAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Region != other.Region) return false;
      if (Realm != other.Realm) return false;
      if (Organization != other.Organization) return false;
      if (Project != other.Project) return false;
      if (ServiceId != other.ServiceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (Realm != global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm.Unspecified) hash ^= Realm.GetHashCode();
      if (Organization.Length != 0) hash ^= Organization.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      if (ServiceId.Length != 0) hash ^= ServiceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Region.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Region);
      }
      if (Realm != global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Realm);
      }
      if (Organization.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Organization);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Project);
      }
      if (ServiceId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServiceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Region.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Region);
      }
      if (Realm != global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Realm);
      }
      if (Organization.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Organization);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Project);
      }
      if (ServiceId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServiceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (Realm != global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Realm);
      }
      if (Organization.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Organization);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      if (ServiceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServiceAddress other) {
      if (other == null) {
        return;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.Realm != global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm.Unspecified) {
        Realm = other.Realm;
      }
      if (other.Organization.Length != 0) {
        Organization = other.Organization;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      if (other.ServiceId.Length != 0) {
        ServiceId = other.ServiceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Region = input.ReadString();
            break;
          }
          case 16: {
            Realm = (global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm) input.ReadEnum();
            break;
          }
          case 26: {
            Organization = input.ReadString();
            break;
          }
          case 34: {
            Project = input.ReadString();
            break;
          }
          case 42: {
            ServiceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Region = input.ReadString();
            break;
          }
          case 16: {
            Realm = (global::WorldEngine.Proto.Micro.V1.ServiceAddress.Types.Realm) input.ReadEnum();
            break;
          }
          case 26: {
            Organization = input.ReadString();
            break;
          }
          case 34: {
            Project = input.ReadString();
            break;
          }
          case 42: {
            ServiceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ServiceAddress message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Realm represents the access scope of the service.
      /// </summary>
      public enum Realm {
        /// <summary>
        /// Unspecified realm, should not be used.
        /// </summary>
        [pbr::OriginalName("REALM_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Reserved for internal services
        /// </summary>
        [pbr::OriginalName("REALM_INTERNAL")] Internal = 1,
        /// <summary>
        /// Publicly accessible services that are part of Worldbase network.
        /// </summary>
        [pbr::OriginalName("REALM_WORLD")] World = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
