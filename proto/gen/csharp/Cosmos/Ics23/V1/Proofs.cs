// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/ics23/v1/proofs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cosmos.Ics23.V1 {

  /// <summary>Holder for reflection information generated from cosmos/ics23/v1/proofs.proto</summary>
  public static partial class ProofsReflection {

    #region Descriptor
    /// <summary>File descriptor for cosmos/ics23/v1/proofs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProofsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxjb3Ntb3MvaWNzMjMvdjEvcHJvb2ZzLnByb3RvEg9jb3Ntb3MuaWNzMjMu",
            "djEikwEKDkV4aXN0ZW5jZVByb29mEhAKA2tleRgBIAEoDFIDa2V5EhQKBXZh",
            "bHVlGAIgASgMUgV2YWx1ZRIrCgRsZWFmGAMgASgLMhcuY29zbW9zLmljczIz",
            "LnYxLkxlYWZPcFIEbGVhZhIsCgRwYXRoGAQgAygLMhguY29zbW9zLmljczIz",
            "LnYxLklubmVyT3BSBHBhdGgikQEKEU5vbkV4aXN0ZW5jZVByb29mEhAKA2tl",
            "eRgBIAEoDFIDa2V5EjMKBGxlZnQYAiABKAsyHy5jb3Ntb3MuaWNzMjMudjEu",
            "RXhpc3RlbmNlUHJvb2ZSBGxlZnQSNQoFcmlnaHQYAyABKAsyHy5jb3Ntb3Mu",
            "aWNzMjMudjEuRXhpc3RlbmNlUHJvb2ZSBXJpZ2h0IpMCCg9Db21taXRtZW50",
            "UHJvb2YSNwoFZXhpc3QYASABKAsyHy5jb3Ntb3MuaWNzMjMudjEuRXhpc3Rl",
            "bmNlUHJvb2ZIAFIFZXhpc3QSQAoIbm9uZXhpc3QYAiABKAsyIi5jb3Ntb3Mu",
            "aWNzMjMudjEuTm9uRXhpc3RlbmNlUHJvb2ZIAFIIbm9uZXhpc3QSMwoFYmF0",
            "Y2gYAyABKAsyGy5jb3Ntb3MuaWNzMjMudjEuQmF0Y2hQcm9vZkgAUgViYXRj",
            "aBJHCgpjb21wcmVzc2VkGAQgASgLMiUuY29zbW9zLmljczIzLnYxLkNvbXBy",
            "ZXNzZWRCYXRjaFByb29mSABSCmNvbXByZXNzZWRCBwoFcHJvb2Yi+AEKBkxl",
            "YWZPcBIrCgRoYXNoGAEgASgOMhcuY29zbW9zLmljczIzLnYxLkhhc2hPcFIE",
            "aGFzaBI4CgtwcmVoYXNoX2tleRgCIAEoDjIXLmNvc21vcy5pY3MyMy52MS5I",
            "YXNoT3BSCnByZWhhc2hLZXkSPAoNcHJlaGFzaF92YWx1ZRgDIAEoDjIXLmNv",
            "c21vcy5pY3MyMy52MS5IYXNoT3BSDHByZWhhc2hWYWx1ZRIxCgZsZW5ndGgY",
            "BCABKA4yGS5jb3Ntb3MuaWNzMjMudjEuTGVuZ3RoT3BSBmxlbmd0aBIWCgZw",
            "cmVmaXgYBSABKAxSBnByZWZpeCJmCgdJbm5lck9wEisKBGhhc2gYASABKA4y",
            "Fy5jb3Ntb3MuaWNzMjMudjEuSGFzaE9wUgRoYXNoEhYKBnByZWZpeBgCIAEo",
            "DFIGcHJlZml4EhYKBnN1ZmZpeBgDIAEoDFIGc3VmZml4IvkBCglQcm9vZlNw",
            "ZWMSNAoJbGVhZl9zcGVjGAEgASgLMhcuY29zbW9zLmljczIzLnYxLkxlYWZP",
            "cFIIbGVhZlNwZWMSOQoKaW5uZXJfc3BlYxgCIAEoCzIaLmNvc21vcy5pY3My",
            "My52MS5Jbm5lclNwZWNSCWlubmVyU3BlYxIbCgltYXhfZGVwdGgYAyABKAVS",
            "CG1heERlcHRoEhsKCW1pbl9kZXB0aBgEIAEoBVIIbWluRGVwdGgSQQodcHJl",
            "aGFzaF9rZXlfYmVmb3JlX2NvbXBhcmlzb24YBSABKAhSGnByZWhhc2hLZXlC",
            "ZWZvcmVDb21wYXJpc29uIvEBCglJbm5lclNwZWMSHwoLY2hpbGRfb3JkZXIY",
            "ASADKAVSCmNoaWxkT3JkZXISHQoKY2hpbGRfc2l6ZRgCIAEoBVIJY2hpbGRT",
            "aXplEioKEW1pbl9wcmVmaXhfbGVuZ3RoGAMgASgFUg9taW5QcmVmaXhMZW5n",
            "dGgSKgoRbWF4X3ByZWZpeF9sZW5ndGgYBCABKAVSD21heFByZWZpeExlbmd0",
            "aBIfCgtlbXB0eV9jaGlsZBgFIAEoDFIKZW1wdHlDaGlsZBIrCgRoYXNoGAYg",
            "ASgOMhcuY29zbW9zLmljczIzLnYxLkhhc2hPcFIEaGFzaCJDCgpCYXRjaFBy",
            "b29mEjUKB2VudHJpZXMYASADKAsyGy5jb3Ntb3MuaWNzMjMudjEuQmF0Y2hF",
            "bnRyeVIHZW50cmllcyKQAQoKQmF0Y2hFbnRyeRI3CgVleGlzdBgBIAEoCzIf",
            "LmNvc21vcy5pY3MyMy52MS5FeGlzdGVuY2VQcm9vZkgAUgVleGlzdBJACghu",
            "b25leGlzdBgCIAEoCzIiLmNvc21vcy5pY3MyMy52MS5Ob25FeGlzdGVuY2VQ",
            "cm9vZkgAUghub25leGlzdEIHCgVwcm9vZiKWAQoUQ29tcHJlc3NlZEJhdGNo",
            "UHJvb2YSPwoHZW50cmllcxgBIAMoCzIlLmNvc21vcy5pY3MyMy52MS5Db21w",
            "cmVzc2VkQmF0Y2hFbnRyeVIHZW50cmllcxI9Cg1sb29rdXBfaW5uZXJzGAIg",
            "AygLMhguY29zbW9zLmljczIzLnYxLklubmVyT3BSDGxvb2t1cElubmVycyKu",
            "AQoUQ29tcHJlc3NlZEJhdGNoRW50cnkSQQoFZXhpc3QYASABKAsyKS5jb3Nt",
            "b3MuaWNzMjMudjEuQ29tcHJlc3NlZEV4aXN0ZW5jZVByb29mSABSBWV4aXN0",
            "EkoKCG5vbmV4aXN0GAIgASgLMiwuY29zbW9zLmljczIzLnYxLkNvbXByZXNz",
            "ZWROb25FeGlzdGVuY2VQcm9vZkgAUghub25leGlzdEIHCgVwcm9vZiKDAQoY",
            "Q29tcHJlc3NlZEV4aXN0ZW5jZVByb29mEhAKA2tleRgBIAEoDFIDa2V5EhQK",
            "BXZhbHVlGAIgASgMUgV2YWx1ZRIrCgRsZWFmGAMgASgLMhcuY29zbW9zLmlj",
            "czIzLnYxLkxlYWZPcFIEbGVhZhISCgRwYXRoGAQgAygFUgRwYXRoIq8BChtD",
            "b21wcmVzc2VkTm9uRXhpc3RlbmNlUHJvb2YSEAoDa2V5GAEgASgMUgNrZXkS",
            "PQoEbGVmdBgCIAEoCzIpLmNvc21vcy5pY3MyMy52MS5Db21wcmVzc2VkRXhp",
            "c3RlbmNlUHJvb2ZSBGxlZnQSPwoFcmlnaHQYAyABKAsyKS5jb3Ntb3MuaWNz",
            "MjMudjEuQ29tcHJlc3NlZEV4aXN0ZW5jZVByb29mUgVyaWdodCqWAQoGSGFz",
            "aE9wEgsKB05PX0hBU0gQABIKCgZTSEEyNTYQARIKCgZTSEE1MTIQAhINCglL",
            "RUNDQUsyNTYQAxINCglSSVBFTUQxNjAQBBILCgdCSVRDT0lOEAUSDgoKU0hB",
            "NTEyXzI1NhAGEg8KC0JMQUtFMkJfNTEyEAcSDwoLQkxBS0UyU18yNTYQCBIK",
            "CgZCTEFLRTMQCSqrAQoITGVuZ3RoT3ASDQoJTk9fUFJFRklYEAASDQoJVkFS",
            "X1BST1RPEAESCwoHVkFSX1JMUBACEg8KC0ZJWEVEMzJfQklHEAMSEgoORklY",
            "RUQzMl9MSVRUTEUQBBIPCgtGSVhFRDY0X0JJRxAFEhIKDkZJWEVENjRfTElU",
            "VExFEAYSFAoQUkVRVUlSRV8zMl9CWVRFUxAHEhQKEFJFUVVJUkVfNjRfQllU",
            "RVMQCEIiWiBnaXRodWIuY29tL2Nvc21vcy9pY3MyMy9nbztpY3MyM2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Cosmos.Ics23.V1.HashOp), typeof(global::Cosmos.Ics23.V1.LengthOp), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.ExistenceProof), global::Cosmos.Ics23.V1.ExistenceProof.Parser, new[]{ "Key", "Value", "Leaf", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.NonExistenceProof), global::Cosmos.Ics23.V1.NonExistenceProof.Parser, new[]{ "Key", "Left", "Right" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.CommitmentProof), global::Cosmos.Ics23.V1.CommitmentProof.Parser, new[]{ "Exist", "Nonexist", "Batch", "Compressed" }, new[]{ "Proof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.LeafOp), global::Cosmos.Ics23.V1.LeafOp.Parser, new[]{ "Hash", "PrehashKey", "PrehashValue", "Length", "Prefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.InnerOp), global::Cosmos.Ics23.V1.InnerOp.Parser, new[]{ "Hash", "Prefix", "Suffix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.ProofSpec), global::Cosmos.Ics23.V1.ProofSpec.Parser, new[]{ "LeafSpec", "InnerSpec", "MaxDepth", "MinDepth", "PrehashKeyBeforeComparison" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.InnerSpec), global::Cosmos.Ics23.V1.InnerSpec.Parser, new[]{ "ChildOrder", "ChildSize", "MinPrefixLength", "MaxPrefixLength", "EmptyChild", "Hash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.BatchProof), global::Cosmos.Ics23.V1.BatchProof.Parser, new[]{ "Entries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.BatchEntry), global::Cosmos.Ics23.V1.BatchEntry.Parser, new[]{ "Exist", "Nonexist" }, new[]{ "Proof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.CompressedBatchProof), global::Cosmos.Ics23.V1.CompressedBatchProof.Parser, new[]{ "Entries", "LookupInners" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.CompressedBatchEntry), global::Cosmos.Ics23.V1.CompressedBatchEntry.Parser, new[]{ "Exist", "Nonexist" }, new[]{ "Proof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.CompressedExistenceProof), global::Cosmos.Ics23.V1.CompressedExistenceProof.Parser, new[]{ "Key", "Value", "Leaf", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Ics23.V1.CompressedNonExistenceProof), global::Cosmos.Ics23.V1.CompressedNonExistenceProof.Parser, new[]{ "Key", "Left", "Right" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum HashOp {
    /// <summary>
    /// NO_HASH is the default if no data passed. Note this is an illegal argument some places.
    /// </summary>
    [pbr::OriginalName("NO_HASH")] NoHash = 0,
    [pbr::OriginalName("SHA256")] Sha256 = 1,
    [pbr::OriginalName("SHA512")] Sha512 = 2,
    [pbr::OriginalName("KECCAK256")] Keccak256 = 3,
    [pbr::OriginalName("RIPEMD160")] Ripemd160 = 4,
    /// <summary>
    /// ripemd160(sha256(x))
    /// </summary>
    [pbr::OriginalName("BITCOIN")] Bitcoin = 5,
    [pbr::OriginalName("SHA512_256")] Sha512256 = 6,
    [pbr::OriginalName("BLAKE2B_512")] Blake2B512 = 7,
    [pbr::OriginalName("BLAKE2S_256")] Blake2S256 = 8,
    [pbr::OriginalName("BLAKE3")] Blake3 = 9,
  }

  /// <summary>
  ///*
  ///LengthOp defines how to process the key and value of the LeafOp
  ///to include length information. After encoding the length with the given
  ///algorithm, the length will be prepended to the key and value bytes.
  ///(Each one with it's own encoded length)
  /// </summary>
  public enum LengthOp {
    /// <summary>
    /// NO_PREFIX don't include any length info
    /// </summary>
    [pbr::OriginalName("NO_PREFIX")] NoPrefix = 0,
    /// <summary>
    /// VAR_PROTO uses protobuf (and go-amino) varint encoding of the length
    /// </summary>
    [pbr::OriginalName("VAR_PROTO")] VarProto = 1,
    /// <summary>
    /// VAR_RLP uses rlp int encoding of the length
    /// </summary>
    [pbr::OriginalName("VAR_RLP")] VarRlp = 2,
    /// <summary>
    /// FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer
    /// </summary>
    [pbr::OriginalName("FIXED32_BIG")] Fixed32Big = 3,
    /// <summary>
    /// FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer
    /// </summary>
    [pbr::OriginalName("FIXED32_LITTLE")] Fixed32Little = 4,
    /// <summary>
    /// FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer
    /// </summary>
    [pbr::OriginalName("FIXED64_BIG")] Fixed64Big = 5,
    /// <summary>
    /// FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer
    /// </summary>
    [pbr::OriginalName("FIXED64_LITTLE")] Fixed64Little = 6,
    /// <summary>
    /// REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output)
    /// </summary>
    [pbr::OriginalName("REQUIRE_32_BYTES")] Require32Bytes = 7,
    /// <summary>
    /// REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output)
    /// </summary>
    [pbr::OriginalName("REQUIRE_64_BYTES")] Require64Bytes = 8,
  }

  #endregion

  #region Messages
  /// <summary>
  ///*
  ///ExistenceProof takes a key and a value and a set of steps to perform on it.
  ///The result of peforming all these steps will provide a "root hash", which can
  ///be compared to the value in a header.
  ///
  ///Since it is computationally infeasible to produce a hash collission for any of the used
  ///cryptographic hash functions, if someone can provide a series of operations to transform
  ///a given key and value into a root hash that matches some trusted root, these key and values
  ///must be in the referenced merkle tree.
  ///
  ///The only possible issue is maliablity in LeafOp, such as providing extra prefix data,
  ///which should be controlled by a spec. Eg. with lengthOp as NONE,
  ///prefix = FOO, key = BAR, value = CHOICE
  ///and
  ///prefix = F, key = OOBAR, value = CHOICE
  ///would produce the same value.
  ///
  ///With LengthOp this is tricker but not impossible. Which is why the "leafPrefixEqual" field
  ///in the ProofSpec is valuable to prevent this mutability. And why all trees should
  ///length-prefix the data before hashing it.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExistenceProof : pb::IMessage<ExistenceProof>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExistenceProof> _parser = new pb::MessageParser<ExistenceProof>(() => new ExistenceProof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExistenceProof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExistenceProof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExistenceProof(ExistenceProof other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      leaf_ = other.leaf_ != null ? other.leaf_.Clone() : null;
      path_ = other.path_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExistenceProof Clone() {
      return new ExistenceProof(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private pb::ByteString key_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "leaf" field.</summary>
    public const int LeafFieldNumber = 3;
    private global::Cosmos.Ics23.V1.LeafOp leaf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.LeafOp Leaf {
      get { return leaf_; }
      set {
        leaf_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Cosmos.Ics23.V1.InnerOp> _repeated_path_codec
        = pb::FieldCodec.ForMessage(34, global::Cosmos.Ics23.V1.InnerOp.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Ics23.V1.InnerOp> path_ = new pbc::RepeatedField<global::Cosmos.Ics23.V1.InnerOp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Ics23.V1.InnerOp> Path {
      get { return path_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExistenceProof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExistenceProof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(Leaf, other.Leaf)) return false;
      if(!path_.Equals(other.path_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (leaf_ != null) hash ^= Leaf.GetHashCode();
      hash ^= path_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (leaf_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Leaf);
      }
      path_.WriteTo(output, _repeated_path_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (leaf_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Leaf);
      }
      path_.WriteTo(ref output, _repeated_path_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (leaf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Leaf);
      }
      size += path_.CalculateSize(_repeated_path_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExistenceProof other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.leaf_ != null) {
        if (leaf_ == null) {
          Leaf = new global::Cosmos.Ics23.V1.LeafOp();
        }
        Leaf.MergeFrom(other.Leaf);
      }
      path_.Add(other.path_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 26: {
            if (leaf_ == null) {
              Leaf = new global::Cosmos.Ics23.V1.LeafOp();
            }
            input.ReadMessage(Leaf);
            break;
          }
          case 34: {
            path_.AddEntriesFrom(input, _repeated_path_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 26: {
            if (leaf_ == null) {
              Leaf = new global::Cosmos.Ics23.V1.LeafOp();
            }
            input.ReadMessage(Leaf);
            break;
          }
          case 34: {
            path_.AddEntriesFrom(ref input, _repeated_path_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///NonExistenceProof takes a proof of two neighbors, one left of the desired key,
  ///one right of the desired key. If both proofs are valid AND they are neighbors,
  ///then there is no valid proof for the given key.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NonExistenceProof : pb::IMessage<NonExistenceProof>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NonExistenceProof> _parser = new pb::MessageParser<NonExistenceProof>(() => new NonExistenceProof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NonExistenceProof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NonExistenceProof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NonExistenceProof(NonExistenceProof other) : this() {
      key_ = other.key_;
      left_ = other.left_ != null ? other.left_.Clone() : null;
      right_ = other.right_ != null ? other.right_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NonExistenceProof Clone() {
      return new NonExistenceProof(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private pb::ByteString key_ = pb::ByteString.Empty;
    /// <summary>
    /// TODO: remove this as unnecessary??? we prove a range
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 2;
    private global::Cosmos.Ics23.V1.ExistenceProof left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.ExistenceProof Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 3;
    private global::Cosmos.Ics23.V1.ExistenceProof right_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.ExistenceProof Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NonExistenceProof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NonExistenceProof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (!object.Equals(Left, other.Left)) return false;
      if (!object.Equals(Right, other.Right)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (left_ != null) hash ^= Left.GetHashCode();
      if (right_ != null) hash ^= Right.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (left_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Right);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (left_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Right);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (left_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
      }
      if (right_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Right);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NonExistenceProof other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.left_ != null) {
        if (left_ == null) {
          Left = new global::Cosmos.Ics23.V1.ExistenceProof();
        }
        Left.MergeFrom(other.Left);
      }
      if (other.right_ != null) {
        if (right_ == null) {
          Right = new global::Cosmos.Ics23.V1.ExistenceProof();
        }
        Right.MergeFrom(other.Right);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            if (left_ == null) {
              Left = new global::Cosmos.Ics23.V1.ExistenceProof();
            }
            input.ReadMessage(Left);
            break;
          }
          case 26: {
            if (right_ == null) {
              Right = new global::Cosmos.Ics23.V1.ExistenceProof();
            }
            input.ReadMessage(Right);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            if (left_ == null) {
              Left = new global::Cosmos.Ics23.V1.ExistenceProof();
            }
            input.ReadMessage(Left);
            break;
          }
          case 26: {
            if (right_ == null) {
              Right = new global::Cosmos.Ics23.V1.ExistenceProof();
            }
            input.ReadMessage(Right);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///CommitmentProof is either an ExistenceProof or a NonExistenceProof, or a Batch of such messages
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CommitmentProof : pb::IMessage<CommitmentProof>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommitmentProof> _parser = new pb::MessageParser<CommitmentProof>(() => new CommitmentProof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CommitmentProof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommitmentProof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommitmentProof(CommitmentProof other) : this() {
      switch (other.ProofCase) {
        case ProofOneofCase.Exist:
          Exist = other.Exist.Clone();
          break;
        case ProofOneofCase.Nonexist:
          Nonexist = other.Nonexist.Clone();
          break;
        case ProofOneofCase.Batch:
          Batch = other.Batch.Clone();
          break;
        case ProofOneofCase.Compressed:
          Compressed = other.Compressed.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommitmentProof Clone() {
      return new CommitmentProof(this);
    }

    /// <summary>Field number for the "exist" field.</summary>
    public const int ExistFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.ExistenceProof Exist {
      get { return proofCase_ == ProofOneofCase.Exist ? (global::Cosmos.Ics23.V1.ExistenceProof) proof_ : null; }
      set {
        proof_ = value;
        proofCase_ = value == null ? ProofOneofCase.None : ProofOneofCase.Exist;
      }
    }

    /// <summary>Field number for the "nonexist" field.</summary>
    public const int NonexistFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.NonExistenceProof Nonexist {
      get { return proofCase_ == ProofOneofCase.Nonexist ? (global::Cosmos.Ics23.V1.NonExistenceProof) proof_ : null; }
      set {
        proof_ = value;
        proofCase_ = value == null ? ProofOneofCase.None : ProofOneofCase.Nonexist;
      }
    }

    /// <summary>Field number for the "batch" field.</summary>
    public const int BatchFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.BatchProof Batch {
      get { return proofCase_ == ProofOneofCase.Batch ? (global::Cosmos.Ics23.V1.BatchProof) proof_ : null; }
      set {
        proof_ = value;
        proofCase_ = value == null ? ProofOneofCase.None : ProofOneofCase.Batch;
      }
    }

    /// <summary>Field number for the "compressed" field.</summary>
    public const int CompressedFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.CompressedBatchProof Compressed {
      get { return proofCase_ == ProofOneofCase.Compressed ? (global::Cosmos.Ics23.V1.CompressedBatchProof) proof_ : null; }
      set {
        proof_ = value;
        proofCase_ = value == null ? ProofOneofCase.None : ProofOneofCase.Compressed;
      }
    }

    private object proof_;
    /// <summary>Enum of possible cases for the "proof" oneof.</summary>
    public enum ProofOneofCase {
      None = 0,
      Exist = 1,
      Nonexist = 2,
      Batch = 3,
      Compressed = 4,
    }
    private ProofOneofCase proofCase_ = ProofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProofOneofCase ProofCase {
      get { return proofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProof() {
      proofCase_ = ProofOneofCase.None;
      proof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CommitmentProof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CommitmentProof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exist, other.Exist)) return false;
      if (!object.Equals(Nonexist, other.Nonexist)) return false;
      if (!object.Equals(Batch, other.Batch)) return false;
      if (!object.Equals(Compressed, other.Compressed)) return false;
      if (ProofCase != other.ProofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (proofCase_ == ProofOneofCase.Exist) hash ^= Exist.GetHashCode();
      if (proofCase_ == ProofOneofCase.Nonexist) hash ^= Nonexist.GetHashCode();
      if (proofCase_ == ProofOneofCase.Batch) hash ^= Batch.GetHashCode();
      if (proofCase_ == ProofOneofCase.Compressed) hash ^= Compressed.GetHashCode();
      hash ^= (int) proofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (proofCase_ == ProofOneofCase.Exist) {
        output.WriteRawTag(10);
        output.WriteMessage(Exist);
      }
      if (proofCase_ == ProofOneofCase.Nonexist) {
        output.WriteRawTag(18);
        output.WriteMessage(Nonexist);
      }
      if (proofCase_ == ProofOneofCase.Batch) {
        output.WriteRawTag(26);
        output.WriteMessage(Batch);
      }
      if (proofCase_ == ProofOneofCase.Compressed) {
        output.WriteRawTag(34);
        output.WriteMessage(Compressed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (proofCase_ == ProofOneofCase.Exist) {
        output.WriteRawTag(10);
        output.WriteMessage(Exist);
      }
      if (proofCase_ == ProofOneofCase.Nonexist) {
        output.WriteRawTag(18);
        output.WriteMessage(Nonexist);
      }
      if (proofCase_ == ProofOneofCase.Batch) {
        output.WriteRawTag(26);
        output.WriteMessage(Batch);
      }
      if (proofCase_ == ProofOneofCase.Compressed) {
        output.WriteRawTag(34);
        output.WriteMessage(Compressed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (proofCase_ == ProofOneofCase.Exist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exist);
      }
      if (proofCase_ == ProofOneofCase.Nonexist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nonexist);
      }
      if (proofCase_ == ProofOneofCase.Batch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Batch);
      }
      if (proofCase_ == ProofOneofCase.Compressed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Compressed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CommitmentProof other) {
      if (other == null) {
        return;
      }
      switch (other.ProofCase) {
        case ProofOneofCase.Exist:
          if (Exist == null) {
            Exist = new global::Cosmos.Ics23.V1.ExistenceProof();
          }
          Exist.MergeFrom(other.Exist);
          break;
        case ProofOneofCase.Nonexist:
          if (Nonexist == null) {
            Nonexist = new global::Cosmos.Ics23.V1.NonExistenceProof();
          }
          Nonexist.MergeFrom(other.Nonexist);
          break;
        case ProofOneofCase.Batch:
          if (Batch == null) {
            Batch = new global::Cosmos.Ics23.V1.BatchProof();
          }
          Batch.MergeFrom(other.Batch);
          break;
        case ProofOneofCase.Compressed:
          if (Compressed == null) {
            Compressed = new global::Cosmos.Ics23.V1.CompressedBatchProof();
          }
          Compressed.MergeFrom(other.Compressed);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cosmos.Ics23.V1.ExistenceProof subBuilder = new global::Cosmos.Ics23.V1.ExistenceProof();
            if (proofCase_ == ProofOneofCase.Exist) {
              subBuilder.MergeFrom(Exist);
            }
            input.ReadMessage(subBuilder);
            Exist = subBuilder;
            break;
          }
          case 18: {
            global::Cosmos.Ics23.V1.NonExistenceProof subBuilder = new global::Cosmos.Ics23.V1.NonExistenceProof();
            if (proofCase_ == ProofOneofCase.Nonexist) {
              subBuilder.MergeFrom(Nonexist);
            }
            input.ReadMessage(subBuilder);
            Nonexist = subBuilder;
            break;
          }
          case 26: {
            global::Cosmos.Ics23.V1.BatchProof subBuilder = new global::Cosmos.Ics23.V1.BatchProof();
            if (proofCase_ == ProofOneofCase.Batch) {
              subBuilder.MergeFrom(Batch);
            }
            input.ReadMessage(subBuilder);
            Batch = subBuilder;
            break;
          }
          case 34: {
            global::Cosmos.Ics23.V1.CompressedBatchProof subBuilder = new global::Cosmos.Ics23.V1.CompressedBatchProof();
            if (proofCase_ == ProofOneofCase.Compressed) {
              subBuilder.MergeFrom(Compressed);
            }
            input.ReadMessage(subBuilder);
            Compressed = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Cosmos.Ics23.V1.ExistenceProof subBuilder = new global::Cosmos.Ics23.V1.ExistenceProof();
            if (proofCase_ == ProofOneofCase.Exist) {
              subBuilder.MergeFrom(Exist);
            }
            input.ReadMessage(subBuilder);
            Exist = subBuilder;
            break;
          }
          case 18: {
            global::Cosmos.Ics23.V1.NonExistenceProof subBuilder = new global::Cosmos.Ics23.V1.NonExistenceProof();
            if (proofCase_ == ProofOneofCase.Nonexist) {
              subBuilder.MergeFrom(Nonexist);
            }
            input.ReadMessage(subBuilder);
            Nonexist = subBuilder;
            break;
          }
          case 26: {
            global::Cosmos.Ics23.V1.BatchProof subBuilder = new global::Cosmos.Ics23.V1.BatchProof();
            if (proofCase_ == ProofOneofCase.Batch) {
              subBuilder.MergeFrom(Batch);
            }
            input.ReadMessage(subBuilder);
            Batch = subBuilder;
            break;
          }
          case 34: {
            global::Cosmos.Ics23.V1.CompressedBatchProof subBuilder = new global::Cosmos.Ics23.V1.CompressedBatchProof();
            if (proofCase_ == ProofOneofCase.Compressed) {
              subBuilder.MergeFrom(Compressed);
            }
            input.ReadMessage(subBuilder);
            Compressed = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  ///LeafOp represents the raw key-value data we wish to prove, and
  ///must be flexible to represent the internal transformation from
  ///the original key-value pairs into the basis hash, for many existing
  ///merkle trees.
  ///
  ///key and value are passed in. So that the signature of this operation is:
  ///leafOp(key, value) -> output
  ///
  ///To process this, first prehash the keys and values if needed (ANY means no hash in this case):
  ///hkey = prehashKey(key)
  ///hvalue = prehashValue(value)
  ///
  ///Then combine the bytes, and hash it
  ///output = hash(prefix || length(hkey) || hkey || length(hvalue) || hvalue)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LeafOp : pb::IMessage<LeafOp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LeafOp> _parser = new pb::MessageParser<LeafOp>(() => new LeafOp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LeafOp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeafOp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeafOp(LeafOp other) : this() {
      hash_ = other.hash_;
      prehashKey_ = other.prehashKey_;
      prehashValue_ = other.prehashValue_;
      length_ = other.length_;
      prefix_ = other.prefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeafOp Clone() {
      return new LeafOp(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private global::Cosmos.Ics23.V1.HashOp hash_ = global::Cosmos.Ics23.V1.HashOp.NoHash;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.HashOp Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    /// <summary>Field number for the "prehash_key" field.</summary>
    public const int PrehashKeyFieldNumber = 2;
    private global::Cosmos.Ics23.V1.HashOp prehashKey_ = global::Cosmos.Ics23.V1.HashOp.NoHash;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.HashOp PrehashKey {
      get { return prehashKey_; }
      set {
        prehashKey_ = value;
      }
    }

    /// <summary>Field number for the "prehash_value" field.</summary>
    public const int PrehashValueFieldNumber = 3;
    private global::Cosmos.Ics23.V1.HashOp prehashValue_ = global::Cosmos.Ics23.V1.HashOp.NoHash;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.HashOp PrehashValue {
      get { return prehashValue_; }
      set {
        prehashValue_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 4;
    private global::Cosmos.Ics23.V1.LengthOp length_ = global::Cosmos.Ics23.V1.LengthOp.NoPrefix;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.LengthOp Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 5;
    private pb::ByteString prefix_ = pb::ByteString.Empty;
    /// <summary>
    /// prefix is a fixed bytes that may optionally be included at the beginning to differentiate
    /// a leaf node from an inner node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Prefix {
      get { return prefix_; }
      set {
        prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LeafOp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LeafOp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (PrehashKey != other.PrehashKey) return false;
      if (PrehashValue != other.PrehashValue) return false;
      if (Length != other.Length) return false;
      if (Prefix != other.Prefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) hash ^= Hash.GetHashCode();
      if (PrehashKey != global::Cosmos.Ics23.V1.HashOp.NoHash) hash ^= PrehashKey.GetHashCode();
      if (PrehashValue != global::Cosmos.Ics23.V1.HashOp.NoHash) hash ^= PrehashValue.GetHashCode();
      if (Length != global::Cosmos.Ics23.V1.LengthOp.NoPrefix) hash ^= Length.GetHashCode();
      if (Prefix.Length != 0) hash ^= Prefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Hash);
      }
      if (PrehashKey != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PrehashKey);
      }
      if (PrehashValue != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PrehashValue);
      }
      if (Length != global::Cosmos.Ics23.V1.LengthOp.NoPrefix) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Length);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Hash);
      }
      if (PrehashKey != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PrehashKey);
      }
      if (PrehashValue != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PrehashValue);
      }
      if (Length != global::Cosmos.Ics23.V1.LengthOp.NoPrefix) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Length);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Hash);
      }
      if (PrehashKey != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PrehashKey);
      }
      if (PrehashValue != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PrehashValue);
      }
      if (Length != global::Cosmos.Ics23.V1.LengthOp.NoPrefix) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Length);
      }
      if (Prefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Prefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LeafOp other) {
      if (other == null) {
        return;
      }
      if (other.Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        Hash = other.Hash;
      }
      if (other.PrehashKey != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        PrehashKey = other.PrehashKey;
      }
      if (other.PrehashValue != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        PrehashValue = other.PrehashValue;
      }
      if (other.Length != global::Cosmos.Ics23.V1.LengthOp.NoPrefix) {
        Length = other.Length;
      }
      if (other.Prefix.Length != 0) {
        Prefix = other.Prefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Hash = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
          case 16: {
            PrehashKey = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
          case 24: {
            PrehashValue = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
          case 32: {
            Length = (global::Cosmos.Ics23.V1.LengthOp) input.ReadEnum();
            break;
          }
          case 42: {
            Prefix = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Hash = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
          case 16: {
            PrehashKey = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
          case 24: {
            PrehashValue = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
          case 32: {
            Length = (global::Cosmos.Ics23.V1.LengthOp) input.ReadEnum();
            break;
          }
          case 42: {
            Prefix = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  ///InnerOp represents a merkle-proof step that is not a leaf.
  ///It represents concatenating two children and hashing them to provide the next result.
  ///
  ///The result of the previous step is passed in, so the signature of this op is:
  ///innerOp(child) -> output
  ///
  ///The result of applying InnerOp should be:
  ///output = op.hash(op.prefix || child || op.suffix)
  ///
  ///where the || operator is concatenation of binary data,
  ///and child is the result of hashing all the tree below this step.
  ///
  ///Any special data, like prepending child with the length, or prepending the entire operation with
  ///some value to differentiate from leaf nodes, should be included in prefix and suffix.
  ///If either of prefix or suffix is empty, we just treat it as an empty string
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InnerOp : pb::IMessage<InnerOp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InnerOp> _parser = new pb::MessageParser<InnerOp>(() => new InnerOp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InnerOp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InnerOp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InnerOp(InnerOp other) : this() {
      hash_ = other.hash_;
      prefix_ = other.prefix_;
      suffix_ = other.suffix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InnerOp Clone() {
      return new InnerOp(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private global::Cosmos.Ics23.V1.HashOp hash_ = global::Cosmos.Ics23.V1.HashOp.NoHash;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.HashOp Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 2;
    private pb::ByteString prefix_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Prefix {
      get { return prefix_; }
      set {
        prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "suffix" field.</summary>
    public const int SuffixFieldNumber = 3;
    private pb::ByteString suffix_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Suffix {
      get { return suffix_; }
      set {
        suffix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InnerOp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InnerOp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (Prefix != other.Prefix) return false;
      if (Suffix != other.Suffix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) hash ^= Hash.GetHashCode();
      if (Prefix.Length != 0) hash ^= Prefix.GetHashCode();
      if (Suffix.Length != 0) hash ^= Suffix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Hash);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Prefix);
      }
      if (Suffix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Suffix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Hash);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Prefix);
      }
      if (Suffix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Suffix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Hash);
      }
      if (Prefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Prefix);
      }
      if (Suffix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Suffix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InnerOp other) {
      if (other == null) {
        return;
      }
      if (other.Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        Hash = other.Hash;
      }
      if (other.Prefix.Length != 0) {
        Prefix = other.Prefix;
      }
      if (other.Suffix.Length != 0) {
        Suffix = other.Suffix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Hash = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
          case 18: {
            Prefix = input.ReadBytes();
            break;
          }
          case 26: {
            Suffix = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Hash = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
          case 18: {
            Prefix = input.ReadBytes();
            break;
          }
          case 26: {
            Suffix = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  ///ProofSpec defines what the expected parameters are for a given proof type.
  ///This can be stored in the client and used to validate any incoming proofs.
  ///
  ///verify(ProofSpec, Proof) -> Proof | Error
  ///
  ///As demonstrated in tests, if we don't fix the algorithm used to calculate the
  ///LeafHash for a given tree, there are many possible key-value pairs that can
  ///generate a given hash (by interpretting the preimage differently).
  ///We need this for proper security, requires client knows a priori what
  ///tree format server uses. But not in code, rather a configuration object.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProofSpec : pb::IMessage<ProofSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProofSpec> _parser = new pb::MessageParser<ProofSpec>(() => new ProofSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProofSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProofSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProofSpec(ProofSpec other) : this() {
      leafSpec_ = other.leafSpec_ != null ? other.leafSpec_.Clone() : null;
      innerSpec_ = other.innerSpec_ != null ? other.innerSpec_.Clone() : null;
      maxDepth_ = other.maxDepth_;
      minDepth_ = other.minDepth_;
      prehashKeyBeforeComparison_ = other.prehashKeyBeforeComparison_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProofSpec Clone() {
      return new ProofSpec(this);
    }

    /// <summary>Field number for the "leaf_spec" field.</summary>
    public const int LeafSpecFieldNumber = 1;
    private global::Cosmos.Ics23.V1.LeafOp leafSpec_;
    /// <summary>
    /// any field in the ExistenceProof must be the same as in this spec.
    /// except Prefix, which is just the first bytes of prefix (spec can be longer)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.LeafOp LeafSpec {
      get { return leafSpec_; }
      set {
        leafSpec_ = value;
      }
    }

    /// <summary>Field number for the "inner_spec" field.</summary>
    public const int InnerSpecFieldNumber = 2;
    private global::Cosmos.Ics23.V1.InnerSpec innerSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.InnerSpec InnerSpec {
      get { return innerSpec_; }
      set {
        innerSpec_ = value;
      }
    }

    /// <summary>Field number for the "max_depth" field.</summary>
    public const int MaxDepthFieldNumber = 3;
    private int maxDepth_;
    /// <summary>
    /// max_depth (if > 0) is the maximum number of InnerOps allowed (mainly for fixed-depth tries)
    /// the max_depth is interpreted as 128 if set to 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxDepth {
      get { return maxDepth_; }
      set {
        maxDepth_ = value;
      }
    }

    /// <summary>Field number for the "min_depth" field.</summary>
    public const int MinDepthFieldNumber = 4;
    private int minDepth_;
    /// <summary>
    /// min_depth (if > 0) is the minimum number of InnerOps allowed (mainly for fixed-depth tries)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinDepth {
      get { return minDepth_; }
      set {
        minDepth_ = value;
      }
    }

    /// <summary>Field number for the "prehash_key_before_comparison" field.</summary>
    public const int PrehashKeyBeforeComparisonFieldNumber = 5;
    private bool prehashKeyBeforeComparison_;
    /// <summary>
    /// prehash_key_before_comparison is a flag that indicates whether to use the
    /// prehash_key specified by LeafOp to compare lexical ordering of keys for
    /// non-existence proofs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PrehashKeyBeforeComparison {
      get { return prehashKeyBeforeComparison_; }
      set {
        prehashKeyBeforeComparison_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProofSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProofSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LeafSpec, other.LeafSpec)) return false;
      if (!object.Equals(InnerSpec, other.InnerSpec)) return false;
      if (MaxDepth != other.MaxDepth) return false;
      if (MinDepth != other.MinDepth) return false;
      if (PrehashKeyBeforeComparison != other.PrehashKeyBeforeComparison) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (leafSpec_ != null) hash ^= LeafSpec.GetHashCode();
      if (innerSpec_ != null) hash ^= InnerSpec.GetHashCode();
      if (MaxDepth != 0) hash ^= MaxDepth.GetHashCode();
      if (MinDepth != 0) hash ^= MinDepth.GetHashCode();
      if (PrehashKeyBeforeComparison != false) hash ^= PrehashKeyBeforeComparison.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (leafSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LeafSpec);
      }
      if (innerSpec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InnerSpec);
      }
      if (MaxDepth != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxDepth);
      }
      if (MinDepth != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinDepth);
      }
      if (PrehashKeyBeforeComparison != false) {
        output.WriteRawTag(40);
        output.WriteBool(PrehashKeyBeforeComparison);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (leafSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LeafSpec);
      }
      if (innerSpec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InnerSpec);
      }
      if (MaxDepth != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxDepth);
      }
      if (MinDepth != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinDepth);
      }
      if (PrehashKeyBeforeComparison != false) {
        output.WriteRawTag(40);
        output.WriteBool(PrehashKeyBeforeComparison);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (leafSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeafSpec);
      }
      if (innerSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InnerSpec);
      }
      if (MaxDepth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxDepth);
      }
      if (MinDepth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinDepth);
      }
      if (PrehashKeyBeforeComparison != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProofSpec other) {
      if (other == null) {
        return;
      }
      if (other.leafSpec_ != null) {
        if (leafSpec_ == null) {
          LeafSpec = new global::Cosmos.Ics23.V1.LeafOp();
        }
        LeafSpec.MergeFrom(other.LeafSpec);
      }
      if (other.innerSpec_ != null) {
        if (innerSpec_ == null) {
          InnerSpec = new global::Cosmos.Ics23.V1.InnerSpec();
        }
        InnerSpec.MergeFrom(other.InnerSpec);
      }
      if (other.MaxDepth != 0) {
        MaxDepth = other.MaxDepth;
      }
      if (other.MinDepth != 0) {
        MinDepth = other.MinDepth;
      }
      if (other.PrehashKeyBeforeComparison != false) {
        PrehashKeyBeforeComparison = other.PrehashKeyBeforeComparison;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (leafSpec_ == null) {
              LeafSpec = new global::Cosmos.Ics23.V1.LeafOp();
            }
            input.ReadMessage(LeafSpec);
            break;
          }
          case 18: {
            if (innerSpec_ == null) {
              InnerSpec = new global::Cosmos.Ics23.V1.InnerSpec();
            }
            input.ReadMessage(InnerSpec);
            break;
          }
          case 24: {
            MaxDepth = input.ReadInt32();
            break;
          }
          case 32: {
            MinDepth = input.ReadInt32();
            break;
          }
          case 40: {
            PrehashKeyBeforeComparison = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (leafSpec_ == null) {
              LeafSpec = new global::Cosmos.Ics23.V1.LeafOp();
            }
            input.ReadMessage(LeafSpec);
            break;
          }
          case 18: {
            if (innerSpec_ == null) {
              InnerSpec = new global::Cosmos.Ics23.V1.InnerSpec();
            }
            input.ReadMessage(InnerSpec);
            break;
          }
          case 24: {
            MaxDepth = input.ReadInt32();
            break;
          }
          case 32: {
            MinDepth = input.ReadInt32();
            break;
          }
          case 40: {
            PrehashKeyBeforeComparison = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///InnerSpec contains all store-specific structure info to determine if two proofs from a
  ///given store are neighbors.
  ///
  ///This enables:
  ///
  ///isLeftMost(spec: InnerSpec, op: InnerOp)
  ///isRightMost(spec: InnerSpec, op: InnerOp)
  ///isLeftNeighbor(spec: InnerSpec, left: InnerOp, right: InnerOp)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InnerSpec : pb::IMessage<InnerSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InnerSpec> _parser = new pb::MessageParser<InnerSpec>(() => new InnerSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InnerSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InnerSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InnerSpec(InnerSpec other) : this() {
      childOrder_ = other.childOrder_.Clone();
      childSize_ = other.childSize_;
      minPrefixLength_ = other.minPrefixLength_;
      maxPrefixLength_ = other.maxPrefixLength_;
      emptyChild_ = other.emptyChild_;
      hash_ = other.hash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InnerSpec Clone() {
      return new InnerSpec(this);
    }

    /// <summary>Field number for the "child_order" field.</summary>
    public const int ChildOrderFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_childOrder_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> childOrder_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Child order is the ordering of the children node, must count from 0
    /// iavl tree is [0, 1] (left then right)
    /// merk is [0, 2, 1] (left, right, here)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ChildOrder {
      get { return childOrder_; }
    }

    /// <summary>Field number for the "child_size" field.</summary>
    public const int ChildSizeFieldNumber = 2;
    private int childSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChildSize {
      get { return childSize_; }
      set {
        childSize_ = value;
      }
    }

    /// <summary>Field number for the "min_prefix_length" field.</summary>
    public const int MinPrefixLengthFieldNumber = 3;
    private int minPrefixLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinPrefixLength {
      get { return minPrefixLength_; }
      set {
        minPrefixLength_ = value;
      }
    }

    /// <summary>Field number for the "max_prefix_length" field.</summary>
    public const int MaxPrefixLengthFieldNumber = 4;
    private int maxPrefixLength_;
    /// <summary>
    /// the max prefix length must be less than the minimum prefix length + child size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxPrefixLength {
      get { return maxPrefixLength_; }
      set {
        maxPrefixLength_ = value;
      }
    }

    /// <summary>Field number for the "empty_child" field.</summary>
    public const int EmptyChildFieldNumber = 5;
    private pb::ByteString emptyChild_ = pb::ByteString.Empty;
    /// <summary>
    /// empty child is the prehash image that is used when one child is nil (eg. 20 bytes of 0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EmptyChild {
      get { return emptyChild_; }
      set {
        emptyChild_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 6;
    private global::Cosmos.Ics23.V1.HashOp hash_ = global::Cosmos.Ics23.V1.HashOp.NoHash;
    /// <summary>
    /// hash is the algorithm that must be used for each InnerOp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.HashOp Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InnerSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InnerSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!childOrder_.Equals(other.childOrder_)) return false;
      if (ChildSize != other.ChildSize) return false;
      if (MinPrefixLength != other.MinPrefixLength) return false;
      if (MaxPrefixLength != other.MaxPrefixLength) return false;
      if (EmptyChild != other.EmptyChild) return false;
      if (Hash != other.Hash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= childOrder_.GetHashCode();
      if (ChildSize != 0) hash ^= ChildSize.GetHashCode();
      if (MinPrefixLength != 0) hash ^= MinPrefixLength.GetHashCode();
      if (MaxPrefixLength != 0) hash ^= MaxPrefixLength.GetHashCode();
      if (EmptyChild.Length != 0) hash ^= EmptyChild.GetHashCode();
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) hash ^= Hash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      childOrder_.WriteTo(output, _repeated_childOrder_codec);
      if (ChildSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChildSize);
      }
      if (MinPrefixLength != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinPrefixLength);
      }
      if (MaxPrefixLength != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPrefixLength);
      }
      if (EmptyChild.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(EmptyChild);
      }
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      childOrder_.WriteTo(ref output, _repeated_childOrder_codec);
      if (ChildSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChildSize);
      }
      if (MinPrefixLength != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinPrefixLength);
      }
      if (MaxPrefixLength != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPrefixLength);
      }
      if (EmptyChild.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(EmptyChild);
      }
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += childOrder_.CalculateSize(_repeated_childOrder_codec);
      if (ChildSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChildSize);
      }
      if (MinPrefixLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPrefixLength);
      }
      if (MaxPrefixLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPrefixLength);
      }
      if (EmptyChild.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EmptyChild);
      }
      if (Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InnerSpec other) {
      if (other == null) {
        return;
      }
      childOrder_.Add(other.childOrder_);
      if (other.ChildSize != 0) {
        ChildSize = other.ChildSize;
      }
      if (other.MinPrefixLength != 0) {
        MinPrefixLength = other.MinPrefixLength;
      }
      if (other.MaxPrefixLength != 0) {
        MaxPrefixLength = other.MaxPrefixLength;
      }
      if (other.EmptyChild.Length != 0) {
        EmptyChild = other.EmptyChild;
      }
      if (other.Hash != global::Cosmos.Ics23.V1.HashOp.NoHash) {
        Hash = other.Hash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            childOrder_.AddEntriesFrom(input, _repeated_childOrder_codec);
            break;
          }
          case 16: {
            ChildSize = input.ReadInt32();
            break;
          }
          case 24: {
            MinPrefixLength = input.ReadInt32();
            break;
          }
          case 32: {
            MaxPrefixLength = input.ReadInt32();
            break;
          }
          case 42: {
            EmptyChild = input.ReadBytes();
            break;
          }
          case 48: {
            Hash = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            childOrder_.AddEntriesFrom(ref input, _repeated_childOrder_codec);
            break;
          }
          case 16: {
            ChildSize = input.ReadInt32();
            break;
          }
          case 24: {
            MinPrefixLength = input.ReadInt32();
            break;
          }
          case 32: {
            MaxPrefixLength = input.ReadInt32();
            break;
          }
          case 42: {
            EmptyChild = input.ReadBytes();
            break;
          }
          case 48: {
            Hash = (global::Cosmos.Ics23.V1.HashOp) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///BatchProof is a group of multiple proof types than can be compressed
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BatchProof : pb::IMessage<BatchProof>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchProof> _parser = new pb::MessageParser<BatchProof>(() => new BatchProof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BatchProof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BatchProof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BatchProof(BatchProof other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BatchProof Clone() {
      return new BatchProof(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cosmos.Ics23.V1.BatchEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Cosmos.Ics23.V1.BatchEntry.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Ics23.V1.BatchEntry> entries_ = new pbc::RepeatedField<global::Cosmos.Ics23.V1.BatchEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Ics23.V1.BatchEntry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BatchProof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BatchProof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BatchProof other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Use BatchEntry not CommitmentProof, to avoid recursion
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BatchEntry : pb::IMessage<BatchEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchEntry> _parser = new pb::MessageParser<BatchEntry>(() => new BatchEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BatchEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BatchEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BatchEntry(BatchEntry other) : this() {
      switch (other.ProofCase) {
        case ProofOneofCase.Exist:
          Exist = other.Exist.Clone();
          break;
        case ProofOneofCase.Nonexist:
          Nonexist = other.Nonexist.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BatchEntry Clone() {
      return new BatchEntry(this);
    }

    /// <summary>Field number for the "exist" field.</summary>
    public const int ExistFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.ExistenceProof Exist {
      get { return proofCase_ == ProofOneofCase.Exist ? (global::Cosmos.Ics23.V1.ExistenceProof) proof_ : null; }
      set {
        proof_ = value;
        proofCase_ = value == null ? ProofOneofCase.None : ProofOneofCase.Exist;
      }
    }

    /// <summary>Field number for the "nonexist" field.</summary>
    public const int NonexistFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.NonExistenceProof Nonexist {
      get { return proofCase_ == ProofOneofCase.Nonexist ? (global::Cosmos.Ics23.V1.NonExistenceProof) proof_ : null; }
      set {
        proof_ = value;
        proofCase_ = value == null ? ProofOneofCase.None : ProofOneofCase.Nonexist;
      }
    }

    private object proof_;
    /// <summary>Enum of possible cases for the "proof" oneof.</summary>
    public enum ProofOneofCase {
      None = 0,
      Exist = 1,
      Nonexist = 2,
    }
    private ProofOneofCase proofCase_ = ProofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProofOneofCase ProofCase {
      get { return proofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProof() {
      proofCase_ = ProofOneofCase.None;
      proof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BatchEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BatchEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exist, other.Exist)) return false;
      if (!object.Equals(Nonexist, other.Nonexist)) return false;
      if (ProofCase != other.ProofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (proofCase_ == ProofOneofCase.Exist) hash ^= Exist.GetHashCode();
      if (proofCase_ == ProofOneofCase.Nonexist) hash ^= Nonexist.GetHashCode();
      hash ^= (int) proofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (proofCase_ == ProofOneofCase.Exist) {
        output.WriteRawTag(10);
        output.WriteMessage(Exist);
      }
      if (proofCase_ == ProofOneofCase.Nonexist) {
        output.WriteRawTag(18);
        output.WriteMessage(Nonexist);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (proofCase_ == ProofOneofCase.Exist) {
        output.WriteRawTag(10);
        output.WriteMessage(Exist);
      }
      if (proofCase_ == ProofOneofCase.Nonexist) {
        output.WriteRawTag(18);
        output.WriteMessage(Nonexist);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (proofCase_ == ProofOneofCase.Exist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exist);
      }
      if (proofCase_ == ProofOneofCase.Nonexist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nonexist);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BatchEntry other) {
      if (other == null) {
        return;
      }
      switch (other.ProofCase) {
        case ProofOneofCase.Exist:
          if (Exist == null) {
            Exist = new global::Cosmos.Ics23.V1.ExistenceProof();
          }
          Exist.MergeFrom(other.Exist);
          break;
        case ProofOneofCase.Nonexist:
          if (Nonexist == null) {
            Nonexist = new global::Cosmos.Ics23.V1.NonExistenceProof();
          }
          Nonexist.MergeFrom(other.Nonexist);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cosmos.Ics23.V1.ExistenceProof subBuilder = new global::Cosmos.Ics23.V1.ExistenceProof();
            if (proofCase_ == ProofOneofCase.Exist) {
              subBuilder.MergeFrom(Exist);
            }
            input.ReadMessage(subBuilder);
            Exist = subBuilder;
            break;
          }
          case 18: {
            global::Cosmos.Ics23.V1.NonExistenceProof subBuilder = new global::Cosmos.Ics23.V1.NonExistenceProof();
            if (proofCase_ == ProofOneofCase.Nonexist) {
              subBuilder.MergeFrom(Nonexist);
            }
            input.ReadMessage(subBuilder);
            Nonexist = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Cosmos.Ics23.V1.ExistenceProof subBuilder = new global::Cosmos.Ics23.V1.ExistenceProof();
            if (proofCase_ == ProofOneofCase.Exist) {
              subBuilder.MergeFrom(Exist);
            }
            input.ReadMessage(subBuilder);
            Exist = subBuilder;
            break;
          }
          case 18: {
            global::Cosmos.Ics23.V1.NonExistenceProof subBuilder = new global::Cosmos.Ics23.V1.NonExistenceProof();
            if (proofCase_ == ProofOneofCase.Nonexist) {
              subBuilder.MergeFrom(Nonexist);
            }
            input.ReadMessage(subBuilder);
            Nonexist = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CompressedBatchProof : pb::IMessage<CompressedBatchProof>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompressedBatchProof> _parser = new pb::MessageParser<CompressedBatchProof>(() => new CompressedBatchProof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompressedBatchProof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedBatchProof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedBatchProof(CompressedBatchProof other) : this() {
      entries_ = other.entries_.Clone();
      lookupInners_ = other.lookupInners_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedBatchProof Clone() {
      return new CompressedBatchProof(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cosmos.Ics23.V1.CompressedBatchEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Cosmos.Ics23.V1.CompressedBatchEntry.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Ics23.V1.CompressedBatchEntry> entries_ = new pbc::RepeatedField<global::Cosmos.Ics23.V1.CompressedBatchEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Ics23.V1.CompressedBatchEntry> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "lookup_inners" field.</summary>
    public const int LookupInnersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cosmos.Ics23.V1.InnerOp> _repeated_lookupInners_codec
        = pb::FieldCodec.ForMessage(18, global::Cosmos.Ics23.V1.InnerOp.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Ics23.V1.InnerOp> lookupInners_ = new pbc::RepeatedField<global::Cosmos.Ics23.V1.InnerOp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Ics23.V1.InnerOp> LookupInners {
      get { return lookupInners_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompressedBatchProof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompressedBatchProof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      if(!lookupInners_.Equals(other.lookupInners_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      hash ^= lookupInners_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      entries_.WriteTo(output, _repeated_entries_codec);
      lookupInners_.WriteTo(output, _repeated_lookupInners_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      entries_.WriteTo(ref output, _repeated_entries_codec);
      lookupInners_.WriteTo(ref output, _repeated_lookupInners_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      size += lookupInners_.CalculateSize(_repeated_lookupInners_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompressedBatchProof other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      lookupInners_.Add(other.lookupInners_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 18: {
            lookupInners_.AddEntriesFrom(input, _repeated_lookupInners_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
          case 18: {
            lookupInners_.AddEntriesFrom(ref input, _repeated_lookupInners_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Use BatchEntry not CommitmentProof, to avoid recursion
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CompressedBatchEntry : pb::IMessage<CompressedBatchEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompressedBatchEntry> _parser = new pb::MessageParser<CompressedBatchEntry>(() => new CompressedBatchEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompressedBatchEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedBatchEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedBatchEntry(CompressedBatchEntry other) : this() {
      switch (other.ProofCase) {
        case ProofOneofCase.Exist:
          Exist = other.Exist.Clone();
          break;
        case ProofOneofCase.Nonexist:
          Nonexist = other.Nonexist.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedBatchEntry Clone() {
      return new CompressedBatchEntry(this);
    }

    /// <summary>Field number for the "exist" field.</summary>
    public const int ExistFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.CompressedExistenceProof Exist {
      get { return proofCase_ == ProofOneofCase.Exist ? (global::Cosmos.Ics23.V1.CompressedExistenceProof) proof_ : null; }
      set {
        proof_ = value;
        proofCase_ = value == null ? ProofOneofCase.None : ProofOneofCase.Exist;
      }
    }

    /// <summary>Field number for the "nonexist" field.</summary>
    public const int NonexistFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.CompressedNonExistenceProof Nonexist {
      get { return proofCase_ == ProofOneofCase.Nonexist ? (global::Cosmos.Ics23.V1.CompressedNonExistenceProof) proof_ : null; }
      set {
        proof_ = value;
        proofCase_ = value == null ? ProofOneofCase.None : ProofOneofCase.Nonexist;
      }
    }

    private object proof_;
    /// <summary>Enum of possible cases for the "proof" oneof.</summary>
    public enum ProofOneofCase {
      None = 0,
      Exist = 1,
      Nonexist = 2,
    }
    private ProofOneofCase proofCase_ = ProofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProofOneofCase ProofCase {
      get { return proofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProof() {
      proofCase_ = ProofOneofCase.None;
      proof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompressedBatchEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompressedBatchEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exist, other.Exist)) return false;
      if (!object.Equals(Nonexist, other.Nonexist)) return false;
      if (ProofCase != other.ProofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (proofCase_ == ProofOneofCase.Exist) hash ^= Exist.GetHashCode();
      if (proofCase_ == ProofOneofCase.Nonexist) hash ^= Nonexist.GetHashCode();
      hash ^= (int) proofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (proofCase_ == ProofOneofCase.Exist) {
        output.WriteRawTag(10);
        output.WriteMessage(Exist);
      }
      if (proofCase_ == ProofOneofCase.Nonexist) {
        output.WriteRawTag(18);
        output.WriteMessage(Nonexist);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (proofCase_ == ProofOneofCase.Exist) {
        output.WriteRawTag(10);
        output.WriteMessage(Exist);
      }
      if (proofCase_ == ProofOneofCase.Nonexist) {
        output.WriteRawTag(18);
        output.WriteMessage(Nonexist);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (proofCase_ == ProofOneofCase.Exist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exist);
      }
      if (proofCase_ == ProofOneofCase.Nonexist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nonexist);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompressedBatchEntry other) {
      if (other == null) {
        return;
      }
      switch (other.ProofCase) {
        case ProofOneofCase.Exist:
          if (Exist == null) {
            Exist = new global::Cosmos.Ics23.V1.CompressedExistenceProof();
          }
          Exist.MergeFrom(other.Exist);
          break;
        case ProofOneofCase.Nonexist:
          if (Nonexist == null) {
            Nonexist = new global::Cosmos.Ics23.V1.CompressedNonExistenceProof();
          }
          Nonexist.MergeFrom(other.Nonexist);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cosmos.Ics23.V1.CompressedExistenceProof subBuilder = new global::Cosmos.Ics23.V1.CompressedExistenceProof();
            if (proofCase_ == ProofOneofCase.Exist) {
              subBuilder.MergeFrom(Exist);
            }
            input.ReadMessage(subBuilder);
            Exist = subBuilder;
            break;
          }
          case 18: {
            global::Cosmos.Ics23.V1.CompressedNonExistenceProof subBuilder = new global::Cosmos.Ics23.V1.CompressedNonExistenceProof();
            if (proofCase_ == ProofOneofCase.Nonexist) {
              subBuilder.MergeFrom(Nonexist);
            }
            input.ReadMessage(subBuilder);
            Nonexist = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Cosmos.Ics23.V1.CompressedExistenceProof subBuilder = new global::Cosmos.Ics23.V1.CompressedExistenceProof();
            if (proofCase_ == ProofOneofCase.Exist) {
              subBuilder.MergeFrom(Exist);
            }
            input.ReadMessage(subBuilder);
            Exist = subBuilder;
            break;
          }
          case 18: {
            global::Cosmos.Ics23.V1.CompressedNonExistenceProof subBuilder = new global::Cosmos.Ics23.V1.CompressedNonExistenceProof();
            if (proofCase_ == ProofOneofCase.Nonexist) {
              subBuilder.MergeFrom(Nonexist);
            }
            input.ReadMessage(subBuilder);
            Nonexist = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CompressedExistenceProof : pb::IMessage<CompressedExistenceProof>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompressedExistenceProof> _parser = new pb::MessageParser<CompressedExistenceProof>(() => new CompressedExistenceProof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompressedExistenceProof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedExistenceProof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedExistenceProof(CompressedExistenceProof other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      leaf_ = other.leaf_ != null ? other.leaf_.Clone() : null;
      path_ = other.path_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedExistenceProof Clone() {
      return new CompressedExistenceProof(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private pb::ByteString key_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "leaf" field.</summary>
    public const int LeafFieldNumber = 3;
    private global::Cosmos.Ics23.V1.LeafOp leaf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.LeafOp Leaf {
      get { return leaf_; }
      set {
        leaf_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_path_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> path_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// these are indexes into the lookup_inners table in CompressedBatchProof
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Path {
      get { return path_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompressedExistenceProof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompressedExistenceProof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(Leaf, other.Leaf)) return false;
      if(!path_.Equals(other.path_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (leaf_ != null) hash ^= Leaf.GetHashCode();
      hash ^= path_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (leaf_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Leaf);
      }
      path_.WriteTo(output, _repeated_path_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (leaf_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Leaf);
      }
      path_.WriteTo(ref output, _repeated_path_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (leaf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Leaf);
      }
      size += path_.CalculateSize(_repeated_path_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompressedExistenceProof other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.leaf_ != null) {
        if (leaf_ == null) {
          Leaf = new global::Cosmos.Ics23.V1.LeafOp();
        }
        Leaf.MergeFrom(other.Leaf);
      }
      path_.Add(other.path_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 26: {
            if (leaf_ == null) {
              Leaf = new global::Cosmos.Ics23.V1.LeafOp();
            }
            input.ReadMessage(Leaf);
            break;
          }
          case 34:
          case 32: {
            path_.AddEntriesFrom(input, _repeated_path_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 26: {
            if (leaf_ == null) {
              Leaf = new global::Cosmos.Ics23.V1.LeafOp();
            }
            input.ReadMessage(Leaf);
            break;
          }
          case 34:
          case 32: {
            path_.AddEntriesFrom(ref input, _repeated_path_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CompressedNonExistenceProof : pb::IMessage<CompressedNonExistenceProof>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompressedNonExistenceProof> _parser = new pb::MessageParser<CompressedNonExistenceProof>(() => new CompressedNonExistenceProof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompressedNonExistenceProof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Ics23.V1.ProofsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedNonExistenceProof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedNonExistenceProof(CompressedNonExistenceProof other) : this() {
      key_ = other.key_;
      left_ = other.left_ != null ? other.left_.Clone() : null;
      right_ = other.right_ != null ? other.right_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressedNonExistenceProof Clone() {
      return new CompressedNonExistenceProof(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private pb::ByteString key_ = pb::ByteString.Empty;
    /// <summary>
    /// TODO: remove this as unnecessary??? we prove a range
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 2;
    private global::Cosmos.Ics23.V1.CompressedExistenceProof left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.CompressedExistenceProof Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 3;
    private global::Cosmos.Ics23.V1.CompressedExistenceProof right_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Ics23.V1.CompressedExistenceProof Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompressedNonExistenceProof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompressedNonExistenceProof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (!object.Equals(Left, other.Left)) return false;
      if (!object.Equals(Right, other.Right)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (left_ != null) hash ^= Left.GetHashCode();
      if (right_ != null) hash ^= Right.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (left_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Right);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (left_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Right);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (left_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
      }
      if (right_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Right);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompressedNonExistenceProof other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.left_ != null) {
        if (left_ == null) {
          Left = new global::Cosmos.Ics23.V1.CompressedExistenceProof();
        }
        Left.MergeFrom(other.Left);
      }
      if (other.right_ != null) {
        if (right_ == null) {
          Right = new global::Cosmos.Ics23.V1.CompressedExistenceProof();
        }
        Right.MergeFrom(other.Right);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            if (left_ == null) {
              Left = new global::Cosmos.Ics23.V1.CompressedExistenceProof();
            }
            input.ReadMessage(Left);
            break;
          }
          case 26: {
            if (right_ == null) {
              Right = new global::Cosmos.Ics23.V1.CompressedExistenceProof();
            }
            input.ReadMessage(Right);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            if (left_ == null) {
              Left = new global::Cosmos.Ics23.V1.CompressedExistenceProof();
            }
            input.ReadMessage(Left);
            break;
          }
          case 26: {
            if (right_ == null) {
              Right = new global::Cosmos.Ics23.V1.CompressedExistenceProof();
            }
            input.ReadMessage(Right);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
