syntax = "proto3";

package argus.adapter.v1;

option go_package = "github.com/argus-labs/argus/x/adapter/types/v1";

service Msg {
  // ClaimQuestReward claims a quest reward.
  rpc ClaimQuestReward(MsgClaimQuestReward) returns (MsgClaimQuestRewardResponse);
  // UpdateGameState updates the state of the game to the DA layer.
  rpc UpdateGameState(MsgUpdateGameState) returns (MsgUpdateGameStateResponse);
}

// MsgClaimQuestReward is the Msg/ClaimQuestReward request type.
message MsgClaimQuestReward {
  // user_ID is the game client user_ID.
  string user_ID = 1;

  // quest_ID is the ID of the quest that was completed.
  string quest_ID = 2;
}

// MsgClaimQuestRewardResponse is the Msg/ClaimQuestReward response type.
message MsgClaimQuestRewardResponse {
  // reward_ID is the ID of the reward claimed.
  string reward_ID = 1;
}


// MsgUpdateGameState is a collection of state items from the ECS that are required
// to be stored in DA in order to rebuild the state of the game in the event of a
// system shutdown.
message MsgUpdateGameState {
  // sender is the address of the sender
  string sender = 1;

  // numPlanets is the number of planets.
  int64 numPlanets = 2;
}

// MsgUpdateGameStateResponse is the response type.
message MsgUpdateGameStateResponse {}
