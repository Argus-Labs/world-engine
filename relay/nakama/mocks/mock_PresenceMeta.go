// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	runtime "github.com/heroiclabs/nakama-common/runtime"
	mock "github.com/stretchr/testify/mock"
)

// MockPresenceMeta is an autogenerated mock type for the PresenceMeta type
type MockPresenceMeta struct {
	mock.Mock
}

type MockPresenceMeta_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPresenceMeta) EXPECT() *MockPresenceMeta_Expecter {
	return &MockPresenceMeta_Expecter{mock: &_m.Mock}
}

// GetHidden provides a mock function with no fields
func (_m *MockPresenceMeta) GetHidden() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetHidden")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockPresenceMeta_GetHidden_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetHidden'
type MockPresenceMeta_GetHidden_Call struct {
	*mock.Call
}

// GetHidden is a helper method to define mock.On call
func (_e *MockPresenceMeta_Expecter) GetHidden() *MockPresenceMeta_GetHidden_Call {
	return &MockPresenceMeta_GetHidden_Call{Call: _e.mock.On("GetHidden")}
}

func (_c *MockPresenceMeta_GetHidden_Call) Run(run func()) *MockPresenceMeta_GetHidden_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresenceMeta_GetHidden_Call) Return(_a0 bool) *MockPresenceMeta_GetHidden_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresenceMeta_GetHidden_Call) RunAndReturn(run func() bool) *MockPresenceMeta_GetHidden_Call {
	_c.Call.Return(run)
	return _c
}

// GetPersistence provides a mock function with no fields
func (_m *MockPresenceMeta) GetPersistence() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPersistence")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockPresenceMeta_GetPersistence_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPersistence'
type MockPresenceMeta_GetPersistence_Call struct {
	*mock.Call
}

// GetPersistence is a helper method to define mock.On call
func (_e *MockPresenceMeta_Expecter) GetPersistence() *MockPresenceMeta_GetPersistence_Call {
	return &MockPresenceMeta_GetPersistence_Call{Call: _e.mock.On("GetPersistence")}
}

func (_c *MockPresenceMeta_GetPersistence_Call) Run(run func()) *MockPresenceMeta_GetPersistence_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresenceMeta_GetPersistence_Call) Return(_a0 bool) *MockPresenceMeta_GetPersistence_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresenceMeta_GetPersistence_Call) RunAndReturn(run func() bool) *MockPresenceMeta_GetPersistence_Call {
	_c.Call.Return(run)
	return _c
}

// GetReason provides a mock function with no fields
func (_m *MockPresenceMeta) GetReason() runtime.PresenceReason {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetReason")
	}

	var r0 runtime.PresenceReason
	if rf, ok := ret.Get(0).(func() runtime.PresenceReason); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(runtime.PresenceReason)
	}

	return r0
}

// MockPresenceMeta_GetReason_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetReason'
type MockPresenceMeta_GetReason_Call struct {
	*mock.Call
}

// GetReason is a helper method to define mock.On call
func (_e *MockPresenceMeta_Expecter) GetReason() *MockPresenceMeta_GetReason_Call {
	return &MockPresenceMeta_GetReason_Call{Call: _e.mock.On("GetReason")}
}

func (_c *MockPresenceMeta_GetReason_Call) Run(run func()) *MockPresenceMeta_GetReason_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresenceMeta_GetReason_Call) Return(_a0 runtime.PresenceReason) *MockPresenceMeta_GetReason_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresenceMeta_GetReason_Call) RunAndReturn(run func() runtime.PresenceReason) *MockPresenceMeta_GetReason_Call {
	_c.Call.Return(run)
	return _c
}

// GetStatus provides a mock function with no fields
func (_m *MockPresenceMeta) GetStatus() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetStatus")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockPresenceMeta_GetStatus_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetStatus'
type MockPresenceMeta_GetStatus_Call struct {
	*mock.Call
}

// GetStatus is a helper method to define mock.On call
func (_e *MockPresenceMeta_Expecter) GetStatus() *MockPresenceMeta_GetStatus_Call {
	return &MockPresenceMeta_GetStatus_Call{Call: _e.mock.On("GetStatus")}
}

func (_c *MockPresenceMeta_GetStatus_Call) Run(run func()) *MockPresenceMeta_GetStatus_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresenceMeta_GetStatus_Call) Return(_a0 string) *MockPresenceMeta_GetStatus_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresenceMeta_GetStatus_Call) RunAndReturn(run func() string) *MockPresenceMeta_GetStatus_Call {
	_c.Call.Return(run)
	return _c
}

// GetUsername provides a mock function with no fields
func (_m *MockPresenceMeta) GetUsername() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUsername")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockPresenceMeta_GetUsername_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUsername'
type MockPresenceMeta_GetUsername_Call struct {
	*mock.Call
}

// GetUsername is a helper method to define mock.On call
func (_e *MockPresenceMeta_Expecter) GetUsername() *MockPresenceMeta_GetUsername_Call {
	return &MockPresenceMeta_GetUsername_Call{Call: _e.mock.On("GetUsername")}
}

func (_c *MockPresenceMeta_GetUsername_Call) Run(run func()) *MockPresenceMeta_GetUsername_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresenceMeta_GetUsername_Call) Return(_a0 string) *MockPresenceMeta_GetUsername_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresenceMeta_GetUsername_Call) RunAndReturn(run func() string) *MockPresenceMeta_GetUsername_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPresenceMeta creates a new instance of MockPresenceMeta. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPresenceMeta(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPresenceMeta {
	mock := &MockPresenceMeta{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
