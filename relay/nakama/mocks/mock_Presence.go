// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	runtime "github.com/heroiclabs/nakama-common/runtime"
	mock "github.com/stretchr/testify/mock"
)

// MockPresence is an autogenerated mock type for the Presence type
type MockPresence struct {
	mock.Mock
}

type MockPresence_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPresence) EXPECT() *MockPresence_Expecter {
	return &MockPresence_Expecter{mock: &_m.Mock}
}

// GetHidden provides a mock function with no fields
func (_m *MockPresence) GetHidden() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetHidden")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockPresence_GetHidden_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetHidden'
type MockPresence_GetHidden_Call struct {
	*mock.Call
}

// GetHidden is a helper method to define mock.On call
func (_e *MockPresence_Expecter) GetHidden() *MockPresence_GetHidden_Call {
	return &MockPresence_GetHidden_Call{Call: _e.mock.On("GetHidden")}
}

func (_c *MockPresence_GetHidden_Call) Run(run func()) *MockPresence_GetHidden_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresence_GetHidden_Call) Return(_a0 bool) *MockPresence_GetHidden_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresence_GetHidden_Call) RunAndReturn(run func() bool) *MockPresence_GetHidden_Call {
	_c.Call.Return(run)
	return _c
}

// GetNodeId provides a mock function with no fields
func (_m *MockPresence) GetNodeId() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetNodeId")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockPresence_GetNodeId_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetNodeId'
type MockPresence_GetNodeId_Call struct {
	*mock.Call
}

// GetNodeId is a helper method to define mock.On call
func (_e *MockPresence_Expecter) GetNodeId() *MockPresence_GetNodeId_Call {
	return &MockPresence_GetNodeId_Call{Call: _e.mock.On("GetNodeId")}
}

func (_c *MockPresence_GetNodeId_Call) Run(run func()) *MockPresence_GetNodeId_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresence_GetNodeId_Call) Return(_a0 string) *MockPresence_GetNodeId_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresence_GetNodeId_Call) RunAndReturn(run func() string) *MockPresence_GetNodeId_Call {
	_c.Call.Return(run)
	return _c
}

// GetPersistence provides a mock function with no fields
func (_m *MockPresence) GetPersistence() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPersistence")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockPresence_GetPersistence_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPersistence'
type MockPresence_GetPersistence_Call struct {
	*mock.Call
}

// GetPersistence is a helper method to define mock.On call
func (_e *MockPresence_Expecter) GetPersistence() *MockPresence_GetPersistence_Call {
	return &MockPresence_GetPersistence_Call{Call: _e.mock.On("GetPersistence")}
}

func (_c *MockPresence_GetPersistence_Call) Run(run func()) *MockPresence_GetPersistence_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresence_GetPersistence_Call) Return(_a0 bool) *MockPresence_GetPersistence_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresence_GetPersistence_Call) RunAndReturn(run func() bool) *MockPresence_GetPersistence_Call {
	_c.Call.Return(run)
	return _c
}

// GetReason provides a mock function with no fields
func (_m *MockPresence) GetReason() runtime.PresenceReason {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetReason")
	}

	var r0 runtime.PresenceReason
	if rf, ok := ret.Get(0).(func() runtime.PresenceReason); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(runtime.PresenceReason)
	}

	return r0
}

// MockPresence_GetReason_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetReason'
type MockPresence_GetReason_Call struct {
	*mock.Call
}

// GetReason is a helper method to define mock.On call
func (_e *MockPresence_Expecter) GetReason() *MockPresence_GetReason_Call {
	return &MockPresence_GetReason_Call{Call: _e.mock.On("GetReason")}
}

func (_c *MockPresence_GetReason_Call) Run(run func()) *MockPresence_GetReason_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresence_GetReason_Call) Return(_a0 runtime.PresenceReason) *MockPresence_GetReason_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresence_GetReason_Call) RunAndReturn(run func() runtime.PresenceReason) *MockPresence_GetReason_Call {
	_c.Call.Return(run)
	return _c
}

// GetSessionId provides a mock function with no fields
func (_m *MockPresence) GetSessionId() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSessionId")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockPresence_GetSessionId_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSessionId'
type MockPresence_GetSessionId_Call struct {
	*mock.Call
}

// GetSessionId is a helper method to define mock.On call
func (_e *MockPresence_Expecter) GetSessionId() *MockPresence_GetSessionId_Call {
	return &MockPresence_GetSessionId_Call{Call: _e.mock.On("GetSessionId")}
}

func (_c *MockPresence_GetSessionId_Call) Run(run func()) *MockPresence_GetSessionId_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresence_GetSessionId_Call) Return(_a0 string) *MockPresence_GetSessionId_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresence_GetSessionId_Call) RunAndReturn(run func() string) *MockPresence_GetSessionId_Call {
	_c.Call.Return(run)
	return _c
}

// GetStatus provides a mock function with no fields
func (_m *MockPresence) GetStatus() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetStatus")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockPresence_GetStatus_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetStatus'
type MockPresence_GetStatus_Call struct {
	*mock.Call
}

// GetStatus is a helper method to define mock.On call
func (_e *MockPresence_Expecter) GetStatus() *MockPresence_GetStatus_Call {
	return &MockPresence_GetStatus_Call{Call: _e.mock.On("GetStatus")}
}

func (_c *MockPresence_GetStatus_Call) Run(run func()) *MockPresence_GetStatus_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresence_GetStatus_Call) Return(_a0 string) *MockPresence_GetStatus_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresence_GetStatus_Call) RunAndReturn(run func() string) *MockPresence_GetStatus_Call {
	_c.Call.Return(run)
	return _c
}

// GetUserId provides a mock function with no fields
func (_m *MockPresence) GetUserId() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUserId")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockPresence_GetUserId_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUserId'
type MockPresence_GetUserId_Call struct {
	*mock.Call
}

// GetUserId is a helper method to define mock.On call
func (_e *MockPresence_Expecter) GetUserId() *MockPresence_GetUserId_Call {
	return &MockPresence_GetUserId_Call{Call: _e.mock.On("GetUserId")}
}

func (_c *MockPresence_GetUserId_Call) Run(run func()) *MockPresence_GetUserId_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresence_GetUserId_Call) Return(_a0 string) *MockPresence_GetUserId_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresence_GetUserId_Call) RunAndReturn(run func() string) *MockPresence_GetUserId_Call {
	_c.Call.Return(run)
	return _c
}

// GetUsername provides a mock function with no fields
func (_m *MockPresence) GetUsername() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUsername")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockPresence_GetUsername_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUsername'
type MockPresence_GetUsername_Call struct {
	*mock.Call
}

// GetUsername is a helper method to define mock.On call
func (_e *MockPresence_Expecter) GetUsername() *MockPresence_GetUsername_Call {
	return &MockPresence_GetUsername_Call{Call: _e.mock.On("GetUsername")}
}

func (_c *MockPresence_GetUsername_Call) Run(run func()) *MockPresence_GetUsername_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPresence_GetUsername_Call) Return(_a0 string) *MockPresence_GetUsername_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPresence_GetUsername_Call) RunAndReturn(run func() string) *MockPresence_GetUsername_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPresence creates a new instance of MockPresence. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPresence(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPresence {
	mock := &MockPresence{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
