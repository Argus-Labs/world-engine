// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockRuntimeConfig is an autogenerated mock type for the RuntimeConfig type
type MockRuntimeConfig struct {
	mock.Mock
}

type MockRuntimeConfig_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRuntimeConfig) EXPECT() *MockRuntimeConfig_Expecter {
	return &MockRuntimeConfig_Expecter{mock: &_m.Mock}
}

// GetEnv provides a mock function with no fields
func (_m *MockRuntimeConfig) GetEnv() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetEnv")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// MockRuntimeConfig_GetEnv_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEnv'
type MockRuntimeConfig_GetEnv_Call struct {
	*mock.Call
}

// GetEnv is a helper method to define mock.On call
func (_e *MockRuntimeConfig_Expecter) GetEnv() *MockRuntimeConfig_GetEnv_Call {
	return &MockRuntimeConfig_GetEnv_Call{Call: _e.mock.On("GetEnv")}
}

func (_c *MockRuntimeConfig_GetEnv_Call) Run(run func()) *MockRuntimeConfig_GetEnv_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRuntimeConfig_GetEnv_Call) Return(_a0 []string) *MockRuntimeConfig_GetEnv_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRuntimeConfig_GetEnv_Call) RunAndReturn(run func() []string) *MockRuntimeConfig_GetEnv_Call {
	_c.Call.Return(run)
	return _c
}

// GetHTTPKey provides a mock function with no fields
func (_m *MockRuntimeConfig) GetHTTPKey() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetHTTPKey")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockRuntimeConfig_GetHTTPKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetHTTPKey'
type MockRuntimeConfig_GetHTTPKey_Call struct {
	*mock.Call
}

// GetHTTPKey is a helper method to define mock.On call
func (_e *MockRuntimeConfig_Expecter) GetHTTPKey() *MockRuntimeConfig_GetHTTPKey_Call {
	return &MockRuntimeConfig_GetHTTPKey_Call{Call: _e.mock.On("GetHTTPKey")}
}

func (_c *MockRuntimeConfig_GetHTTPKey_Call) Run(run func()) *MockRuntimeConfig_GetHTTPKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRuntimeConfig_GetHTTPKey_Call) Return(_a0 string) *MockRuntimeConfig_GetHTTPKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRuntimeConfig_GetHTTPKey_Call) RunAndReturn(run func() string) *MockRuntimeConfig_GetHTTPKey_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRuntimeConfig creates a new instance of MockRuntimeConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRuntimeConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRuntimeConfig {
	mock := &MockRuntimeConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
