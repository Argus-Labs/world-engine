// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockSatoriConfig is an autogenerated mock type for the SatoriConfig type
type MockSatoriConfig struct {
	mock.Mock
}

type MockSatoriConfig_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSatoriConfig) EXPECT() *MockSatoriConfig_Expecter {
	return &MockSatoriConfig_Expecter{mock: &_m.Mock}
}

// GetApiKey provides a mock function with no fields
func (_m *MockSatoriConfig) GetApiKey() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetApiKey")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockSatoriConfig_GetApiKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetApiKey'
type MockSatoriConfig_GetApiKey_Call struct {
	*mock.Call
}

// GetApiKey is a helper method to define mock.On call
func (_e *MockSatoriConfig_Expecter) GetApiKey() *MockSatoriConfig_GetApiKey_Call {
	return &MockSatoriConfig_GetApiKey_Call{Call: _e.mock.On("GetApiKey")}
}

func (_c *MockSatoriConfig_GetApiKey_Call) Run(run func()) *MockSatoriConfig_GetApiKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSatoriConfig_GetApiKey_Call) Return(_a0 string) *MockSatoriConfig_GetApiKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSatoriConfig_GetApiKey_Call) RunAndReturn(run func() string) *MockSatoriConfig_GetApiKey_Call {
	_c.Call.Return(run)
	return _c
}

// GetApiKeyName provides a mock function with no fields
func (_m *MockSatoriConfig) GetApiKeyName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetApiKeyName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockSatoriConfig_GetApiKeyName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetApiKeyName'
type MockSatoriConfig_GetApiKeyName_Call struct {
	*mock.Call
}

// GetApiKeyName is a helper method to define mock.On call
func (_e *MockSatoriConfig_Expecter) GetApiKeyName() *MockSatoriConfig_GetApiKeyName_Call {
	return &MockSatoriConfig_GetApiKeyName_Call{Call: _e.mock.On("GetApiKeyName")}
}

func (_c *MockSatoriConfig_GetApiKeyName_Call) Run(run func()) *MockSatoriConfig_GetApiKeyName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSatoriConfig_GetApiKeyName_Call) Return(_a0 string) *MockSatoriConfig_GetApiKeyName_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSatoriConfig_GetApiKeyName_Call) RunAndReturn(run func() string) *MockSatoriConfig_GetApiKeyName_Call {
	_c.Call.Return(run)
	return _c
}

// GetSigningKey provides a mock function with no fields
func (_m *MockSatoriConfig) GetSigningKey() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSigningKey")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockSatoriConfig_GetSigningKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSigningKey'
type MockSatoriConfig_GetSigningKey_Call struct {
	*mock.Call
}

// GetSigningKey is a helper method to define mock.On call
func (_e *MockSatoriConfig_Expecter) GetSigningKey() *MockSatoriConfig_GetSigningKey_Call {
	return &MockSatoriConfig_GetSigningKey_Call{Call: _e.mock.On("GetSigningKey")}
}

func (_c *MockSatoriConfig_GetSigningKey_Call) Run(run func()) *MockSatoriConfig_GetSigningKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSatoriConfig_GetSigningKey_Call) Return(_a0 string) *MockSatoriConfig_GetSigningKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSatoriConfig_GetSigningKey_Call) RunAndReturn(run func() string) *MockSatoriConfig_GetSigningKey_Call {
	_c.Call.Return(run)
	return _c
}

// GetUrl provides a mock function with no fields
func (_m *MockSatoriConfig) GetUrl() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUrl")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockSatoriConfig_GetUrl_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUrl'
type MockSatoriConfig_GetUrl_Call struct {
	*mock.Call
}

// GetUrl is a helper method to define mock.On call
func (_e *MockSatoriConfig_Expecter) GetUrl() *MockSatoriConfig_GetUrl_Call {
	return &MockSatoriConfig_GetUrl_Call{Call: _e.mock.On("GetUrl")}
}

func (_c *MockSatoriConfig_GetUrl_Call) Run(run func()) *MockSatoriConfig_GetUrl_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSatoriConfig_GetUrl_Call) Return(_a0 string) *MockSatoriConfig_GetUrl_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSatoriConfig_GetUrl_Call) RunAndReturn(run func() string) *MockSatoriConfig_GetUrl_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSatoriConfig creates a new instance of MockSatoriConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSatoriConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSatoriConfig {
	mock := &MockSatoriConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
