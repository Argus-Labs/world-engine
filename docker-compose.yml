version: '3'
services:
  postgres:
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all
    environment:
      - POSTGRES_DB=nakama
      - POSTGRES_PASSWORD=localdb
    expose:
      - "8080"
      - "5432"
    image: postgres:12.2-alpine
    ports:
      - "5432:5432"
      - "8080:8080"
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - default

  nakama:
    container_name: nakama_container
    environment:
      - SIDECAR_TARGET=node:5050
    build:
      context: nakama
      dockerfile: Dockerfile
    depends_on:
      - postgres
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
        /nakama/nakama migrate up --database.address postgres:localdb@postgres:5432/nakama &&
        exec /nakama/nakama --config /nakama/data/local.yml --database.address postgres:localdb@postgres:5432/nakama
    expose:
      - "7349" # internal nakama
      - "7350" # internal nakama
      - "7351" # internal nakama
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7350/" ]
      interval: 10s
      timeout: 5s
      retries: 5
    links:
      - "postgres:db"
    ports:
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    restart: unless-stopped
    networks:
      - default

  node:
    container_name: argus_node
    environment:
      - USE_SIDECAR=true
    build:
      context: .
      dockerfile: argus.Dockerfile
    restart: unless-stopped
    expose:
      - "5050"
      - "9090"
    networks:
      - default

  tester:
    container_name: tester_container
    environment:
      - SIDECAR_URL=node:5050
      - ARGUS_NODE_URL=node:9090
    build:
      context: .
      dockerfile: tester.Dockerfile
    networks:
      - default
    depends_on:
      - node
    restart: on-failure

volumes:
  data:
  shared:
  logs:

networks:
  default:
    driver: bridge
