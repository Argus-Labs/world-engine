version: '3'
services:
  postgres:
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all
    environment:
      - POSTGRES_DB=nakama
      - POSTGRES_PASSWORD=localdb
    expose:
      - "8080"
      - "5432"
    image: postgres:12.2-alpine
    ports:
      - "5432:5432"
      - "8080:8080"
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - default

  nakama:
    container_name: nakama_container
    environment:
      - CARDINAL_TARGET=cardinal:7812
    build:
      context: game/nakama
      dockerfile: Dockerfile
    depends_on:
      - postgres
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
        /nakama/nakama migrate up --database.address postgres:localdb@postgres:5432/nakama &&
        exec /nakama/nakama --config /nakama/data/local.yml --database.address postgres:localdb@postgres:5432/nakama
    expose:
      - "7349" # internal nakama
      - "7350" # internal nakama
      - "7351" # internal nakama
      - "6732" # evm receiver
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7350/" ]
      interval: 10s
      timeout: 5s
      retries: 5
    links:
      - "postgres:db"
    ports:
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
      - "6732:6732"
    restart: unless-stopped
    networks:
      - default

  chain:
    container_name: evm_base_shard
    environment:
      ## Env vars reference: https://github.com/Argus-Labs/world-engine/blob/main/chain/README.md
      - DA_AUTH_TOKEN=
      #- DA_NAMESPACE_ID=
      #- DA_CONFIG=
      #- USE_SHARD_LISTENER=true
      #- SHARD_HANDLER_LISTEN_ADDR=0.0.0.0:9000
      #- SERVER_CERT_PATH=
      #- SERVER_KEY_PATH=
      #- CLIENT_CERT_PATH=
    build:
      context: chain
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - "1317"
      - "9000"
      - "26657"
    ports:
      - "1317:1317"
      - "9000:9000"
      - "26657:26657"
    networks:
      - default
    depends_on:
      - celestia


  tester:
    container_name: tester_container
    environment:
      - ARGUS_NODE_URL=chain:9090
      - ENABLE_DOCKER_TESTS=true
      - NAKAMA_URL=nakama:6732
    build:
      context: chain
      dockerfile: tester.Dockerfile
    networks:
      - default
    depends_on:
      - chain
    restart: on-failure

  celestia:
    container_name: celestia_container
    build:
      context: dev/local-celestia-devnet
      dockerfile: Dockerfile
    networks:
      - default
    restart: on-failure
    ports:
      - "26657"
      - "26658"
      - "26659"
      - "9090"

  redis:
    container_name: "redis"
    image: "redis:alpine"
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - default
    ports:
      - "6379:6379"
    volumes:
      - $PWD/configs/redis.conf:/usr/local/etc/redis/redis.conf

  cardinal:
    container_name: game_shard
    build:
      context: cardinal
      dockerfile: Dockerfile
    networks:
      - default
    ports:
      - "7812:7812"
    expose:
      - "7812"
    restart: on-failure
    environment:
      - grpc_addr=cardinal:7812
      - redis_addr=redis:6379
    depends_on:
      - redis

volumes:
  data:
  shared:
  logs:

networks:
  default:
    driver: bridge
