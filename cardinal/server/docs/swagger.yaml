basePath: /
definitions:
  handler.CQLQueryRequest:
    properties:
      cql:
        type: string
    type: object
  handler.CQLQueryResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/handler.cqlData'
        type: array
    type: object
  handler.FieldDetail:
    properties:
      fields:
        additionalProperties: {}
        description: variable name and type
        type: object
      name:
        description: name of the message or query
        type: string
      url:
        type: string
    type: object
  handler.GetHealthResponse:
    properties:
      isGameLoopRunning:
        type: boolean
      isServerRunning:
        type: boolean
    type: object
  handler.GetWorldResponse:
    properties:
      components:
        description: list of component names
        items:
          $ref: '#/definitions/handler.FieldDetail'
        type: array
      messages:
        items:
          $ref: '#/definitions/handler.FieldDetail'
        type: array
      namespace:
        type: string
      queries:
        items:
          $ref: '#/definitions/handler.FieldDetail'
        type: array
    type: object
  handler.ListTxReceiptsRequest:
    properties:
      startTick:
        type: integer
    type: object
  handler.ListTxReceiptsResponse:
    properties:
      endTick:
        type: integer
      receipts:
        items:
          $ref: '#/definitions/handler.ReceiptEntry'
        type: array
      startTick:
        type: integer
    type: object
  handler.PostTransactionResponse:
    properties:
      tick:
        type: integer
      txHash:
        type: string
    type: object
  handler.ReceiptEntry:
    properties:
      errors:
        items:
          type: string
        type: array
      result: {}
      tick:
        type: integer
      txHash:
        type: string
    type: object
  handler.Transaction:
    properties:
      body:
        description: json string
        type: object
      hash:
        type: string
      namespace:
        type: string
      nonce:
        type: integer
      personaTag:
        type: string
      signature:
        description: hex encoded string
        type: string
    type: object
  handler.cqlData:
    properties:
      data:
        type: object
      id:
        type: integer
    type: object
  handler.debugStateElement:
    properties:
      components:
        type: object
      id:
        type: integer
    type: object
info:
  contact: {}
  description: Backend server for World Engine
  title: Cardinal
  version: 0.0.1
paths:
  /cql:
    post:
      consumes:
      - application/json
      description: Executes a CQL (Cardinal Query Language) query
      parameters:
      - description: CQL query to be executed
        in: body
        name: cql
        required: true
        schema:
          $ref: '#/definitions/handler.CQLQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Results of the executed CQL query
          schema:
            $ref: '#/definitions/handler.CQLQueryResponse'
        "400":
          description: Invalid request parameters
          schema:
            type: string
      summary: Executes a CQL (Cardinal Query Language) query
  /debug/state:
    post:
      description: Retrieves a list of all entities in the game state
      produces:
      - application/json
      responses:
        "200":
          description: List of all entities
          schema:
            items:
              $ref: '#/definitions/handler.debugStateElement'
            type: array
      summary: Retrieves a list of all entities in the game state
  /events:
    get:
      description: Establishes a new websocket connection to retrieve system events
      produces:
      - application/json
      responses:
        "101":
          description: Switch protocol to ws
          schema:
            type: string
      summary: Establishes a new websocket connection to retrieve system events
  /health:
    get:
      description: Retrieves the status of the server and game loop
      produces:
      - application/json
      responses:
        "200":
          description: Server and game loop status
          schema:
            $ref: '#/definitions/handler.GetHealthResponse'
      summary: Retrieves the status of the server and game loop
  /query/{queryGroup}/{queryName}:
    post:
      consumes:
      - application/json
      description: Executes a query
      parameters:
      - description: Query group
        in: path
        name: queryGroup
        required: true
        type: string
      - description: Name of a registered query
        in: path
        name: queryName
        required: true
        type: string
      - description: Query to be executed
        in: body
        name: queryBody
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Results of the executed query
          schema:
            type: object
        "400":
          description: Invalid request parameters
          schema:
            type: string
      summary: Executes a query
  /query/game/{queryName}:
    post:
      consumes:
      - application/json
      description: Executes a query
      parameters:
      - description: Name of a registered query
        in: path
        name: queryName
        required: true
        type: string
      - description: Query to be executed
        in: body
        name: queryBody
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Results of the executed query
          schema:
            type: object
        "400":
          description: Invalid request parameters
          schema:
            type: string
      summary: Executes a query
  /query/receipts/list:
    post:
      consumes:
      - application/json
      description: Retrieves all transaction receipts
      parameters:
      - description: Query body
        in: body
        name: ListTxReceiptsRequest
        required: true
        schema:
          $ref: '#/definitions/handler.ListTxReceiptsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: List of receipts
          schema:
            $ref: '#/definitions/handler.ListTxReceiptsResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
      summary: Retrieves all transaction receipts
  /tx/{txGroup}/{txName}:
    post:
      consumes:
      - application/json
      description: Submits a transaction
      parameters:
      - description: Message group
        in: path
        name: txGroup
        required: true
        type: string
      - description: Name of a registered message
        in: path
        name: txName
        required: true
        type: string
      - description: Transaction details & message to be submitted
        in: body
        name: txBody
        required: true
        schema:
          $ref: '#/definitions/handler.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: Transaction hash and tick
          schema:
            $ref: '#/definitions/handler.PostTransactionResponse'
        "400":
          description: Invalid request parameter
          schema:
            type: string
      summary: Submits a transaction
  /tx/game/{txName}:
    post:
      consumes:
      - application/json
      description: Submits a transaction
      parameters:
      - description: Name of a registered message
        in: path
        name: txName
        required: true
        type: string
      - description: Transaction details & message to be submitted
        in: body
        name: txBody
        required: true
        schema:
          $ref: '#/definitions/handler.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: Transaction hash and tick
          schema:
            $ref: '#/definitions/handler.PostTransactionResponse'
        "400":
          description: Invalid request parameter
          schema:
            type: string
      summary: Submits a transaction
  /tx/persona/create-persona:
    post:
      consumes:
      - application/json
      description: Creates a persona
      parameters:
      - description: Transaction details & message to be submitted
        in: body
        name: txBody
        required: true
        schema:
          $ref: '#/definitions/handler.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: Transaction hash and tick
          schema:
            $ref: '#/definitions/handler.PostTransactionResponse'
        "400":
          description: Invalid request parameter
          schema:
            type: string
      summary: Creates a persona
  /world:
    get:
      consumes:
      - application/json
      description: Contains the registered components, messages, queries, and namespace
      produces:
      - application/json
      responses:
        "200":
          description: Details of the game world
          schema:
            $ref: '#/definitions/handler.GetWorldResponse'
        "400":
          description: Invalid request parameters
          schema:
            type: string
      summary: Retrieves details of the game world
schemes:
- http
- ws
swagger: "2.0"
