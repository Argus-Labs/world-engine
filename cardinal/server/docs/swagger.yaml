basePath: /
definitions:
  cardinal.ListTxReceiptsRequest:
    properties:
      startTick:
        type: integer
    type: object
  cardinal.ListTxReceiptsResponse:
    properties:
      endTick:
        type: integer
      receipts:
        items:
          $ref: '#/definitions/cardinal.ReceiptEntry'
        type: array
      startTick:
        type: integer
    type: object
  cardinal.ReceiptEntry:
    properties:
      errors:
        items:
          type: string
        type: array
      result: {}
      tick:
        type: integer
      txHash:
        type: string
    type: object
  handler.CQLQueryRequest:
    properties:
      cql:
        type: string
    type: object
  handler.CQLQueryResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/handler.cqlData'
        type: array
    type: object
  handler.FieldDetail:
    properties:
      fields:
        additionalProperties: {}
        description: variable name and type
        type: object
      name:
        description: name of the message or query
        type: string
      url:
        type: string
    type: object
  handler.GetEndpointsResponse:
    properties:
      queryEndpoints:
        items:
          type: string
        type: array
      txEndpoints:
        items:
          type: string
        type: array
    type: object
  handler.GetHealthResponse:
    properties:
      isGameLoopRunning:
        type: boolean
      isServerRunning:
        type: boolean
    type: object
  handler.GetWorldResponse:
    properties:
      components:
        description: list of component names
        items:
          $ref: '#/definitions/handler.FieldDetail'
        type: array
      messages:
        items:
          $ref: '#/definitions/handler.FieldDetail'
        type: array
      namespace:
        type: string
      queries:
        items:
          $ref: '#/definitions/handler.FieldDetail'
        type: array
    type: object
  handler.PostTransactionResponse:
    properties:
      tick:
        type: integer
      txHash:
        type: string
    type: object
  handler.Transaction:
    properties:
      body:
        description: json string
        type: object
      hash:
        type: string
      namespace:
        type: string
      nonce:
        type: integer
      personaTag:
        type: string
      signature:
        description: hex encoded string
        type: string
    type: object
  handler.cqlData:
    properties:
      data:
        type: object
      id:
        type: integer
    type: object
  handler.debugStateElement:
    properties:
      components:
        type: object
      id:
        type: integer
    type: object
info:
  contact: {}
  description: Backend server for World Engine
  title: Cardinal
  version: 0.0.1
paths:
  /cql:
    post:
      consumes:
      - application/json
      description: Runs the provided CQL query on Cardinal and return the results
      parameters:
      - description: CQL query to be executed
        in: body
        name: cql
        required: true
        schema:
          $ref: '#/definitions/handler.CQLQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: CQL query result
          schema:
            $ref: '#/definitions/handler.CQLQueryResponse'
        "400":
          description: Invalid request body or invalid CQL query
          schema:
            type: string
      summary: Query game entities with CQL (cardinal query language)
  /events:
    get:
      description: Websocket connection for events.
      produces:
      - application/json
      responses:
        "101":
          description: Switch protocol to ws
          schema:
            type: string
      summary: Endpoint for events
  /health:
    get:
      description: Retrieves the running status of the Cardinal server and game loop
      produces:
      - application/json
      responses:
        "200":
          description: Server and game loop status
          schema:
            $ref: '#/definitions/handler.GetHealthResponse'
      summary: Get the World Engine's health status
  /query/debug/state:
    post:
      description: Retrieves a list of all entities in the game state
      produces:
      - application/json
      responses:
        "200":
          description: List of entities
          schema:
            items:
              $ref: '#/definitions/cardinal.debugStateElement'
            type: array
      summary: Get all game entities
  /query/game/{queryName}:
    post:
      consumes:
      - application/json
      description: Runs a registered query on Cardinal and returns the results
      parameters:
      - description: Name of the registered query
        in: path
        name: queryName
        required: true
        type: string
      - description: Query body
        in: body
        name: queryBody
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Query results
          schema:
            type: object
        "400":
          description: Invalid request body or invalid query body
          schema:
            type: string
  /query/receipts/list:
    post:
      consumes:
      - application/json
      description: Retrieves all transaction receipts from Cardinal
      parameters:
      - description: Query body
        in: body
        name: ListTxReceiptsRequest
        required: true
        schema:
          $ref: '#/definitions/cardinal.ListTxReceiptsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: List of receipts
          schema:
            $ref: '#/definitions/cardinal.ListTxReceiptsResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
      summary: Get transaction receipts from Cardinal
  /tx/game/{txName}:
    post:
      consumes:
      - application/json
      description: Submits a message to Cardinal and returns the transaction hash
        and tick
      parameters:
      - description: Message body
        in: body
        name: txBody
        required: true
        schema:
          $ref: '#/definitions/handler.Transaction'
      - description: Name of the registered message
        in: path
        name: txName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction hash and tick
          schema:
            $ref: '#/definitions/handler.PostTransactionResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
      summary: Submit a message to Cardinal
  /tx/persona/create-persona:
    post:
      consumes:
      - application/json
      description: Creates a persona in Cardinal and returns the transaction hash
        and tick
      parameters:
      - description: Message body
        in: body
        name: txBody
        required: true
        schema:
          $ref: '#/definitions/handler.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: Transaction hash and tick
          schema:
            $ref: '#/definitions/handler.PostTransactionResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
      summary: Create a persona
  /world:
    get:
      consumes:
      - application/json
      description: Retrieves details of registered components, messages, and queries
      produces:
      - application/json
      responses:
        "200":
          description: List of registered components, messages, and queries
          schema:
            $ref: '#/definitions/handler.GetWorldResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
      summary: Get registered components, messages, and queries
schemes:
- http
- ws
swagger: "2.0"
