/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type WorldFieldDetail = {
    /**
     * variable name and type
     */
    fields?: { [k: string]: any } | undefined;
    /**
     * name of the message or query
     */
    name?: string | undefined;
    url?: string | undefined;
};

/** @internal */
export const WorldFieldDetail$inboundSchema: z.ZodType<WorldFieldDetail, z.ZodTypeDef, unknown> =
    z.object({
        fields: z.record(z.any()).optional(),
        name: z.string().optional(),
        url: z.string().optional(),
    });

/** @internal */
export type WorldFieldDetail$Outbound = {
    fields?: { [k: string]: any } | undefined;
    name?: string | undefined;
    url?: string | undefined;
};

/** @internal */
export const WorldFieldDetail$outboundSchema: z.ZodType<
    WorldFieldDetail$Outbound,
    z.ZodTypeDef,
    WorldFieldDetail
> = z.object({
    fields: z.record(z.any()).optional(),
    name: z.string().optional(),
    url: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorldFieldDetail$ {
    /** @deprecated use `WorldFieldDetail$inboundSchema` instead. */
    export const inboundSchema = WorldFieldDetail$inboundSchema;
    /** @deprecated use `WorldFieldDetail$outboundSchema` instead. */
    export const outboundSchema = WorldFieldDetail$outboundSchema;
    /** @deprecated use `WorldFieldDetail$Outbound` instead. */
    export type Outbound = WorldFieldDetail$Outbound;
}
