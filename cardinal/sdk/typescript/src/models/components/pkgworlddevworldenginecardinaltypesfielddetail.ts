/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type PkgWorldDevWorldEngineCardinalTypesFieldDetail = {
    /**
     * variable name and type
     */
    fields?: { [k: string]: any } | undefined;
    /**
     * name of the message or query
     */
    name?: string | undefined;
    url?: string | undefined;
};

/** @internal */
export const PkgWorldDevWorldEngineCardinalTypesFieldDetail$inboundSchema: z.ZodType<
    PkgWorldDevWorldEngineCardinalTypesFieldDetail,
    z.ZodTypeDef,
    unknown
> = z.object({
    fields: z.record(z.any()).optional(),
    name: z.string().optional(),
    url: z.string().optional(),
});

/** @internal */
export type PkgWorldDevWorldEngineCardinalTypesFieldDetail$Outbound = {
    fields?: { [k: string]: any } | undefined;
    name?: string | undefined;
    url?: string | undefined;
};

/** @internal */
export const PkgWorldDevWorldEngineCardinalTypesFieldDetail$outboundSchema: z.ZodType<
    PkgWorldDevWorldEngineCardinalTypesFieldDetail$Outbound,
    z.ZodTypeDef,
    PkgWorldDevWorldEngineCardinalTypesFieldDetail
> = z.object({
    fields: z.record(z.any()).optional(),
    name: z.string().optional(),
    url: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PkgWorldDevWorldEngineCardinalTypesFieldDetail$ {
    /** @deprecated use `PkgWorldDevWorldEngineCardinalTypesFieldDetail$inboundSchema` instead. */
    export const inboundSchema = PkgWorldDevWorldEngineCardinalTypesFieldDetail$inboundSchema;
    /** @deprecated use `PkgWorldDevWorldEngineCardinalTypesFieldDetail$outboundSchema` instead. */
    export const outboundSchema = PkgWorldDevWorldEngineCardinalTypesFieldDetail$outboundSchema;
    /** @deprecated use `PkgWorldDevWorldEngineCardinalTypesFieldDetail$Outbound` instead. */
    export type Outbound = PkgWorldDevWorldEngineCardinalTypesFieldDetail$Outbound;
}
