/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CQLQueryRequest = {
    cql?: string | undefined;
};

/** @internal */
export const CQLQueryRequest$inboundSchema: z.ZodType<CQLQueryRequest, z.ZodTypeDef, unknown> =
    z.object({
        cql: z.string().optional(),
    });

/** @internal */
export type CQLQueryRequest$Outbound = {
    cql?: string | undefined;
};

/** @internal */
export const CQLQueryRequest$outboundSchema: z.ZodType<
    CQLQueryRequest$Outbound,
    z.ZodTypeDef,
    CQLQueryRequest
> = z.object({
    cql: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CQLQueryRequest$ {
    /** @deprecated use `CQLQueryRequest$inboundSchema` instead. */
    export const inboundSchema = CQLQueryRequest$inboundSchema;
    /** @deprecated use `CQLQueryRequest$outboundSchema` instead. */
    export const outboundSchema = CQLQueryRequest$outboundSchema;
    /** @deprecated use `CQLQueryRequest$Outbound` instead. */
    export type Outbound = CQLQueryRequest$Outbound;
}
