/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ReceiptEntry,
    ReceiptEntry$inboundSchema,
    ReceiptEntry$Outbound,
    ReceiptEntry$outboundSchema,
} from "./receiptentry.js";
import * as z from "zod";

export type GetReceiptsResponse = {
    endTick?: number | undefined;
    receipts?: Array<ReceiptEntry> | null | undefined;
    startTick?: number | undefined;
};

/** @internal */
export const GetReceiptsResponse$inboundSchema: z.ZodType<
    GetReceiptsResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    endTick: z.number().int().optional(),
    receipts: z.nullable(z.array(ReceiptEntry$inboundSchema)).optional(),
    startTick: z.number().int().optional(),
});

/** @internal */
export type GetReceiptsResponse$Outbound = {
    endTick?: number | undefined;
    receipts?: Array<ReceiptEntry$Outbound> | null | undefined;
    startTick?: number | undefined;
};

/** @internal */
export const GetReceiptsResponse$outboundSchema: z.ZodType<
    GetReceiptsResponse$Outbound,
    z.ZodTypeDef,
    GetReceiptsResponse
> = z.object({
    endTick: z.number().int().optional(),
    receipts: z.nullable(z.array(ReceiptEntry$outboundSchema)).optional(),
    startTick: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetReceiptsResponse$ {
    /** @deprecated use `GetReceiptsResponse$inboundSchema` instead. */
    export const inboundSchema = GetReceiptsResponse$inboundSchema;
    /** @deprecated use `GetReceiptsResponse$outboundSchema` instead. */
    export const outboundSchema = GetReceiptsResponse$outboundSchema;
    /** @deprecated use `GetReceiptsResponse$Outbound` instead. */
    export type Outbound = GetReceiptsResponse$Outbound;
}
