/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type TxResponse = {
    tick?: number | undefined;
    txHash?: string | undefined;
};

/** @internal */
export const TxResponse$inboundSchema: z.ZodType<TxResponse, z.ZodTypeDef, unknown> = z.object({
    tick: z.number().int().optional(),
    txHash: z.string().optional(),
});

/** @internal */
export type TxResponse$Outbound = {
    tick?: number | undefined;
    txHash?: string | undefined;
};

/** @internal */
export const TxResponse$outboundSchema: z.ZodType<TxResponse$Outbound, z.ZodTypeDef, TxResponse> =
    z.object({
        tick: z.number().int().optional(),
        txHash: z.string().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TxResponse$ {
    /** @deprecated use `TxResponse$inboundSchema` instead. */
    export const inboundSchema = TxResponse$inboundSchema;
    /** @deprecated use `TxResponse$outboundSchema` instead. */
    export const outboundSchema = TxResponse$outboundSchema;
    /** @deprecated use `TxResponse$Outbound` instead. */
    export type Outbound = TxResponse$Outbound;
}
