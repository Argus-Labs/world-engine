/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GetHealthResponse = {
    isGameLoopRunning?: boolean | undefined;
    isServerRunning?: boolean | undefined;
};

/** @internal */
export const GetHealthResponse$inboundSchema: z.ZodType<GetHealthResponse, z.ZodTypeDef, unknown> =
    z.object({
        isGameLoopRunning: z.boolean().optional(),
        isServerRunning: z.boolean().optional(),
    });

/** @internal */
export type GetHealthResponse$Outbound = {
    isGameLoopRunning?: boolean | undefined;
    isServerRunning?: boolean | undefined;
};

/** @internal */
export const GetHealthResponse$outboundSchema: z.ZodType<
    GetHealthResponse$Outbound,
    z.ZodTypeDef,
    GetHealthResponse
> = z.object({
    isGameLoopRunning: z.boolean().optional(),
    isServerRunning: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetHealthResponse$ {
    /** @deprecated use `GetHealthResponse$inboundSchema` instead. */
    export const inboundSchema = GetHealthResponse$inboundSchema;
    /** @deprecated use `GetHealthResponse$outboundSchema` instead. */
    export const outboundSchema = GetHealthResponse$outboundSchema;
    /** @deprecated use `GetHealthResponse$Outbound` instead. */
    export type Outbound = GetHealthResponse$Outbound;
}
