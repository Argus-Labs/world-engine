/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * json string
 */
export type Body = {};

export type CardinalServerHandlerTransaction = {
    /**
     * json string
     */
    body?: Body | undefined;
    hash?: string | undefined;
    namespace?: string | undefined;
    nonce?: number | undefined;
    personaTag?: string | undefined;
    /**
     * hex encoded string
     */
    signature?: string | undefined;
};

/** @internal */
export const Body$inboundSchema: z.ZodType<Body, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Body$Outbound = {};

/** @internal */
export const Body$outboundSchema: z.ZodType<Body$Outbound, z.ZodTypeDef, Body> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Body$ {
    /** @deprecated use `Body$inboundSchema` instead. */
    export const inboundSchema = Body$inboundSchema;
    /** @deprecated use `Body$outboundSchema` instead. */
    export const outboundSchema = Body$outboundSchema;
    /** @deprecated use `Body$Outbound` instead. */
    export type Outbound = Body$Outbound;
}

/** @internal */
export const CardinalServerHandlerTransaction$inboundSchema: z.ZodType<
    CardinalServerHandlerTransaction,
    z.ZodTypeDef,
    unknown
> = z.object({
    body: z.lazy(() => Body$inboundSchema).optional(),
    hash: z.string().optional(),
    namespace: z.string().optional(),
    nonce: z.number().int().optional(),
    personaTag: z.string().optional(),
    signature: z.string().optional(),
});

/** @internal */
export type CardinalServerHandlerTransaction$Outbound = {
    body?: Body$Outbound | undefined;
    hash?: string | undefined;
    namespace?: string | undefined;
    nonce?: number | undefined;
    personaTag?: string | undefined;
    signature?: string | undefined;
};

/** @internal */
export const CardinalServerHandlerTransaction$outboundSchema: z.ZodType<
    CardinalServerHandlerTransaction$Outbound,
    z.ZodTypeDef,
    CardinalServerHandlerTransaction
> = z.object({
    body: z.lazy(() => Body$outboundSchema).optional(),
    hash: z.string().optional(),
    namespace: z.string().optional(),
    nonce: z.number().int().optional(),
    personaTag: z.string().optional(),
    signature: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardinalServerHandlerTransaction$ {
    /** @deprecated use `CardinalServerHandlerTransaction$inboundSchema` instead. */
    export const inboundSchema = CardinalServerHandlerTransaction$inboundSchema;
    /** @deprecated use `CardinalServerHandlerTransaction$outboundSchema` instead. */
    export const outboundSchema = CardinalServerHandlerTransaction$outboundSchema;
    /** @deprecated use `CardinalServerHandlerTransaction$Outbound` instead. */
    export type Outbound = CardinalServerHandlerTransaction$Outbound;
}
